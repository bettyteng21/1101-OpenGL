/***************************
4108056007 鄧雅文 第三次作業10/27
***************************/
#include <GL/glut.h>
#include <math.h>
#include <stdlib.h>
#include <stdio.h>

#define DRAW_ARRAY 1
#define DRAW_ELEMENT 2
#define DRAW_MULTI_ARRAY 3
#define DRAW_MULTI_ELEMENT 4

int display_type = DRAW_ARRAY; //default使用glDrawArrays來呈現
GLuint indices[50] = {};	//for glDrawElements的functions

void fill_in_indices(int start_index, int number) { //將連續的index填入indices array (for glDrawElements)
	for (int i = 0; i < number; i++) {
		indices[i] = start_index;
		start_index++;
	}
} 

void fill_in_multi_indices(GLuint* temp_indices, int start_index, int number) { //將連續的index填入indices array (for glMultiDrawElements)

	for (int i = 0; i < number; i++) {
		temp_indices[i] = start_index;
		start_index++;
	}
}

void glMultiDrawArrays(GLenum mode, const GLint* first, const GLint* count, GLsizei primcount) { 
	//沒有找到可以include的library，所以直接照定義自己設function
	GLsizei i;
	for (i = 0; i < primcount; i++) {
		glDrawArrays(mode, first[i], count[i]);
	}
}

void glMultiDrawElements(GLenum mode, const GLsizei* count, GLenum type, GLvoid** indices_local, GLsizei primcount) { 
	//沒有找到可以include的library，所以直接照定義自己設function
	GLsizei i;
	for (i = 0; i < primcount; i++) {
		glDrawElements(mode, count[i], type, indices_local[i]);
	}
}

void setupInterleave_國(void){
	static GLfloat vertices_國[] = { 
		-2.6f, 0.15f,
		-2.58f, 0.09f,
		-2.4f, 0.115f,
		-2.3f, 0.125f,
		-2.2f, 0.12f,
		-2.155f, 0.126f,
		-2.15f, 0.15f,
		-2.155f, 0.18f,
		-2.2f, 0.19f,
		-2.285f, 0.193f, //
		-2.193f, 0.32f,
		-2.163f, 0.4f,
		-2.165f, 0.415f,
		-2.18f, 0.43f,
		-2.2f, 0.465f,
		-2.23f, 0.44f,
		-2.227, 0.41f,
		-2.25f, 0.33f,//
		-2.25f, 0.33f,
		-2.26f, 0.3f,
		-2.218f, 0.265f,
		-2.193f, 0.32f,//
		-2.26f, 0.3f,
		-2.28f, 0.265f,
		-2.24f, 0.23f,
		-2.218f, 0.265f,//
		-2.28f, 0.265f,
		-2.33f, 0.22f,
		-2.285f, 0.193f,
		-2.24f, 0.23f,//
		-2.285f, 0.193f,
		-2.33f, 0.22f,
		-2.4f, 0.18f,
		-2.53f, 0.165f,
		-2.4f, 0.115f,//
		-2.54f, 0.1f,
		-2.53f, 0.165f,
		-2.545f, 0.22f,
		-2.545f, 0.34f,
		-2.59f, 0.42f,
		-2.6f, 0.3f,
		-2.6f, 0.15f,//
		-2.536f, 0.365f,
		-2.52f, 0.37f,
		-2.5f, 0.375f,
		-2.59f, 0.48f,
		-2.59f, 0.42f,
		-2.545f, 0.34f,//
		-2.59f, 0.48f,
		-2.47f, 0.46f,
		-2.44f, 0.425f,
		-2.48f, 0.4f,
		-2.5f, 0.375f,//
		-2.47f, 0.46f,
		-2.44f, 0.425f,
		-2.415f, 0.43f,//
		-2.415f, 0.43f, 
		-2.46f, 0.38f,
		-2.52f, 0.32f,
		-2.53f, 0.3f,
		-2.52f, 0.28f,
		-2.46f, 0.31f,
		-2.38f, 0.43f,//
		-2.48f, 0.285f,
		-2.515f, 0.26f,
		-2.515f, 0.22f,
		-2.495f, 0.205f,
		-2.4f, 0.248f,//
		-2.48f, 0.285f,
		-2.4f, 0.248f,
		-2.32f, 0.28f,
		-2.46f, 0.31f,//
		-2.28f, 0.295f,
		-2.27f, 0.31f,
		-2.265f, 0.325f,
		-2.265f, 0.34f,
		-2.28f, 0.355f,
		-2.34f, 0.33f,
		-2.32f, 0.28f,//
		-2.32f, 0.28f,
		-2.34f, 0.33f,
		-2.415f, 0.38f,
		-2.46f, 0.31f, //	
		-2.34f, 0.33f,
		-2.35f, 0.335f,
		-2.4f, 0.248f,//
		-2.35f, 0.335f,
		-2.287f, 0.41f,
		-2.305f, 0.46f,
		-2.34f, 0.42f,//
		-2.35f, 0.335f,
		-2.34f, 0.42f,
		-2.415f, 0.38f,//
		-2.47f, 0.46f,
		-2.44f, 0.425f,
		-2.415f, 0.43f,
		-2.38f, 0.43f,
		-2.32f, 0.47f,
		-2.33f, 0.51f, //
		-2.33f, 0.51f,
		-2.305f, 0.46f,
		-2.32f, 0.47f, //
		-2.275f, 0.53f,
		-2.26f, 0.49f,
		-2.24f, 0.495f,
		-2.245f, 0.54f, //
		-2.245f, 0.54f,
		-2.24f, 0.495f,
		-2.18f, 0.5f, //
		-2.18f, 0.5f,
		-2.165f, 0.505f,
		-2.165f, 0.53f,
		-2.245f, 0.54f, //
		-2.265f, 0.56f,
		-2.245f, 0.54f,
		-2.165f, 0.53f,
		-2.173f, 0.55f, //
		-2.173f, 0.55f,
		-2.21f, 0.6f,
		-2.263f, 0.583f,
		-2.265f, 0.56f, //
		-2.34f, 0.56f,
		-2.33f, 0.51f,
		-2.32f, 0.47f,
		-2.287f, 0.41f,
		-2.25f, 0.34f,
		-2.227f, 0.41f,
		-2.26f, 0.49f,
		-2.275f, 0.53f,
		-2.283f, 0.58f, //
		-2.25f, 0.34f,
		-2.25f, 0.33f,
		-2.227f, 0.41f, //
		-2.218f, 0.265f,
		-2.205f, 0.242f,
		-2.193f, 0.32f,//
		-2.17f, 0.195f,
		-2.155f, 0.195f,
		-2.193f, 0.32f,
		-2.205f, 0.242f,//
		-2.15f, 0.22f,
		-2.14f, 0.23f,
		-2.137f, 0.249f,
		-2.193f, 0.32f,//
		-2.193f, 0.32f,
		-2.155f, 0.195f,
		-2.15f, 0.22f,//
		-2.54f, 0.566f,
		-2.57f, 0.565f,
		-2.587f, 0.54f,
		-2.59f, 0.48f,
		-2.505f, 0.503f,//
		-2.59f, 0.48f,
		-2.47f, 0.46f,
		-2.505f, 0.503f,//
		-2.505f, 0.503f,
		-2.34f, 0.56f,
		-2.5f, 0.595f,
		-2.52f, 0.58f,
		-2.54f, 0.566f,//
		-2.5f, 0.595f,
		-2.34f, 0.56f,
		-2.283f, 0.58f,
		-2.22f, 0.658f, //
		-2.22f, 0.658f,
		-2.283f, 0.58f,
		-2.263f, 0.583f,
		-2.21f, 0.6f,//
		-2.21f, 0.6f,
		-2.13f, 0.61f,
		-2.12f, 0.66f,
		-2.22f, 0.658f,//
		-2.09f, 0.61f,
		-2.1f, 0.645f,
		-2.12f, 0.66f,
		-2.13f, 0.61f,//
		-2.13f, 0.61f,
		-2.123f, 0.109f,
		-2.075f, 0.4f,
		-2.09f, 0.61f,//
		-2.075f, 0.4f,
		-2.068f, 0.095f,
		-2.072f, 0.07f,
		-2.123f, 0.109f,//
		-2.123f, 0.109f,
		-2.16f, 0.11f,
		-2.128f, 0.015f,
		-2.11f, 0.015f,
		-2.072f, 0.07f
	};

	glInterleavedArrays(GL_V2F, 0, vertices_國);
}

void setupInterleave_立(void) {
	static GLfloat vertices_立[] = {
		-1.687f, 0.617f,
		-1.685f, 0.585f,
		-1.64f, 0.603f,//
		-1.685f, 0.585f,
		-1.69f, 0.57f,
		-1.686f, 0.56f,
		-1.673f, 0.540f,
		- 1.635f, 0.505f,
		- 1.640f, 0.603f,//
		-1.635f, 0.505f,
		-1.543f, 0.525f,
		-1.542f, 0.542f,
		-1.56f, 0.56f,
		-1.6f, 0.585f,
		-1.64f, 0.603f,//
		-1.635f, 0.505f,
		-1.775f, 0.465f,
		-1.780f, 0.390f,
		-1.760f, 0.392f,
		-1.618f, 0.438f,//
		-1.775f, 0.465f,
		-1.767f, 0.48f,
		-1.79f, 0.466f, //
		-1.79f, 0.466f,
		-1.825f, 0.46f,
		-1.841f, 0.44f,
		-1.846f, 0.41f,
		-1.84f, 0.39f,
		-1.82f, 0.375f,
		-1.81f, 0.372f,
		-1.8f, 0.38f,//
		-1.8f, 0.38f,
		-1.78f, 0.39f,
		-1.775f, 0.465f,
		-1.79f, 0.466f,//
		-1.635f, 0.505f,
		-1.618f, 0.438f,
		-1.52f, 0.453f,
		-1.49f, 0.527f,
		-1.543f, 0.525f,//
		-1.47f, 0.453f,
		-1.45f, 0.472f,
		-1.454f, 0.51f,
		-1.48f, 0.523f,//
		-1.49f, 0.527f,
		-1.52f, 0.453f,
		-1.47f, 0.453f,
		-1.48f, 0.523f,//
		-1.58f, 0.425f,
		-1.52f, 0.453f,
		-1.618f, 0.438f,//
		-1.618f, 0.438f,
		-1.745f, 0.34f,
		-1.63f, 0.378f,
		-1.58f, 0.425f,//
		-1.745f, 0.34f,
		-1.753f, 0.32f,
		-1.753f, 0.276f,
		-1.739f, 0.262f,
		-1.729f, 0.262f,
		-1.54f, 0.376f,
		-1.63f, 0.378f,//
		-1.51f, 0.384f,
		-1.5f, 0.415f,
		-1.53f, 0.41f,
		-1.63f, 0.378f,
		-1.54f, 0.376f,//
		-1.51f, 0.384f,
		-1.5f, 0.376f,
		-1.445f, 0.374f,
		-1.445f, 0.395f,
		-1.46f, 0.41f,
		-1.48f, 0.417f,
		-1.5f, 0.415f,//
		-1.5f, 0.376f,
		-1.56f, 0.29f,
		-1.54f, 0.253f,
		-1.46f, 0.35f,
		-1.445f, 0.374f,//
		-1.62f, 0.228f,
		-1.592f, 0.205f,
		-1.54f, 0.253f,
		-1.56f, 0.29f,//
		-1.592f, 0.205f,
		-1.62f, 0.228f,
		-1.677f, 0.186f,
		-1.595f, 0.194f,//
		-1.595f, 0.194f,
		-1.677f, 0.186f,
		-1.846f, 0.171f,
		-1.83f, 0.14f,
		-1.8f, 0.112f,
		-1.78f, 0.105f,
		-1.765f, 0.105f,
		-1.63f, 0.127f,//
		-1.63f, 0.127f,
		-1.53f, 0.142f,
		-1.5f, 0.15f,
		-1.44f, 0.203f,
		-1.595f, 0.194f,//
		-1.5f, 0.15f,
		-1.43f, 0.153f,
		-1.38f, 0.195f,
		-1.44f, 0.203f,//
		-1.43f, 0.153f,
		-1.36f, 0.145f,
		-1.348f, 0.146f,
		-1.348f, 0.168f,
		-1.359f, 0.189f,
		-1.38f, 0.195f,
		-1.44f, 0.203f
	};

	glInterleavedArrays(GL_V2F, 0, vertices_立);
}

void setupInterleave_中(void) {
	static GLfloat vertices_中[] = {
		-1.18f, 0.525f,
		-1.2f, 0.52f,
		-1.185f, 0.5f,
		-1.17f, 0.5f,//
		-1.21f, 0.528f,
		-1.226f, 0.528f,
		-1.24f, 0.51f,
		-1.19f, 0.49f,
		-1.185f, 0.5f,
		-1.2f, 0.52f,//
		-1.24f, 0.51f,
		-1.243f, 0.46f,
		-1.238f, 0.42f,
		-1.227f, 0.38f,
		-1.215f, 0.35f,
		-1.2f, 0.32f,
		-1.18f, 0.3f,
		-1.169f, 0.405f,
		-1.177f, 0.475f,
		-1.19f, 0.49f,//
		-1.227f, 0.38f,
		-1.166f, 0.34f,
		-1.16f, 0.347f,
		-1.16f, 0.36f,
		-1.169f, 0.405f, //
		-1.238f, 0.42f,
		-1.2f, 0.32f,
		-1.18f, 0.3f,
		-1.13f, 0.3f,
		-1.15f, 0.315f,
		-1.166f, 0.34f,//
		-1.18f, 0.525f,
		-1.17f, 0.5f,
		-1.12f, 0.47f,
		-1.1f, 0.47f,
		-0.947f, 0.535f,
		-0.954f, 0.573f,
		-1.16f, 0.537f,//
		-0.94f, 0.535f,
		-0.954f, 0.573f,
		-0.947f, 0.535f,//
		-0.94f, 0.535f,
		-0.9f, 0.58f,
		-0.895f, 0.648f,
		-0.92f, 0.655f,
		-0.952f, 0.64f,
		-0.954f, 0.573f,//
		-0.9f, 0.58f,
		-0.94f, 0.535f,
		-0.953f, 0.425f,
		-0.902f, 0.48f,
		-0.894f, 0.536f,//
		-0.96f, 0.335f,
		-0.957f, -0.145f,
		-0.92f, -0.12f,
		-0.908f, 0.015f,
		-0.902f, 0.02f,
		-0.902f, 0.48f,
		-0.953f, 0.425f,//
		-0.894f, 0.536f,
		-0.82f, 0.54f,
		-0.78f, 0.58f,
		-0.9f, 0.58f,//
		-0.78f, 0.58f,
		-0.82f, 0.54f,
		-0.738f, 0.53f,
		-0.74f, 0.56f,//
		-0.902f, 0.48f,
		-0.902f, 0.415f,
		-0.738f, 0.53f,
		-0.82f, 0.54f,//
		-0.953f, 0.425f,
		-1.05f, 0.375f,
		-1.068f, 0.32f,
		-1.05, 0.31f,
		-0.96f, 0.335f,//
		-0.835f, 0.38f,
		-0.82f, 0.385f,
		-0.82f, 0.395f,
		-0.88f, 0.405f,
		-0.902f, 0.4f,//
		-0.902f, 0.34f,
		-0.85f, 0.35f,
		-0.827f, 0.365f,
		-0.835f, 0.38f,
		-0.902f, 0.4f,
	};

	glInterleavedArrays(GL_V2F, 0, vertices_中);
}

void setupInterleave_興(void) {
	static GLfloat vertices_興[] = {
		-0.62f, 0.215f,
		-0.68f, 0.265f,
		-0.71f, 0.27f,
		-0.718f, 0.26f,
		-0.714f, 0.24f,//
		-0.714f, 0.24f,
		-0.72f, 0.22f,
		-0.72f, 0.2f,
		-0.695f, 0.178f,
		-0.68f, 0.178f,
		-0.62f, 0.215f,//
		-0.62f, 0.215f,
		-0.42f, 0.29f,
		-0.455f, 0.32f,
		-0.5f, 0.308f,
		-0.68f, 0.265f,//
		-0.455f, 0.32f,
		-0.455f, 0.56f,
		-0.465f, 0.58f,
		-0.48f, 0.598f,
		-0.5f, 0.54f,
		-0.5f, 0.308f,//
		-0.48f, 0.598f,
		-0.52f, 0.58f,
		-0.52f, 0.565f,
		-0.5f, 0.54f, //
		-0.42f, 0.29f,
		-0.408f, 0.293f,
		-0.43f, 0.322f,
		-0.455f, 0.32f,//
		-0.413f, 0.273f,
		-0.408f, 0.293f,
		-0.42f, 0.29f,//
		-0.43f, 0.322f,
		-0.408f, 0.293f,
		-0.389f, 0.332f,
		-0.387f, 0.54f,
		-0.423f, 0.51f,
		-0.43f, 0.5f,//
		-0.39f, 0.58f,
		-0.41f, 0.6f,
		-0.425f, 0.55f,
		-0.423f, 0.51f,
		-0.387f, 0.54f,//
		-0.425f, 0.55f,
		-0.41f, 0.6f,
		-0.44f, 0.612f,
		-0.445f, 0.59f,//	
		-0.46f, 0.6f,
		-0.455f, 0.585f,
		-0.445f, 0.59f,
		-0.44f, 0.612f,//
		-0.389f, 0.332f,
		-0.408f, 0.293f,
		-0.36f, 0.31f,
		-0.325f, 0.35f,
		-0.36f, 0.34f,//
		-0.36f, 0.31f,
		-0.345f, 0.29f,
		-0.33f, 0.31f,
		-0.325f, 0.35f,//
		-0.36f, 0.34f,
		-0.325f, 0.35f,
		-0.318f, 0.363f,
		-0.32f, 0.455f,
		-0.32f, 0.6f,
		-0.36f, 0.47f,//
		-0.354f, 0.56f,
		-0.36f, 0.533f,
		-0.37f, 0.5f,
		-0.36f, 0.47f,
		-0.32f, 0.483f,//
		-0.354f, 0.56f,
		-0.36f, 0.533f,
		-0.32f, 0.483f,
		-0.32f, 0.55f,
		-0.32f, 0.6f,//
		-0.32f, 0.6f,
		-0.34f, 0.615f,
		-0.36f, 0.59f,
		-0.354f, 0.56f,//
		-0.34f, 0.615f,
		-0.37f, 0.61f,
		-0.378f, 0.6f,
		-0.37f, 0.59f,
		-0.36f, 0.59f,//
		-0.34f, 0.615f,
		-0.32f, 0.6f,
		-0.27f, 0.61f,
		-0.205f, 0.62f,
		-0.195f, 0.64f,
		-0.24f, 0.668f,//
		-0.275f, 0.56f,
		-0.21f, 0.585f,
		-0.19f, 0.615f,
		-0.205f, 0.62f,
		-0.27f, 0.61f,//
		-0.21f, 0.585f,
		-0.275f, 0.56f,
		-0.278f, 0.48f,
		-0.23f, 0.51f,
		-0.22f, 0.54f,//
		-0.32f, 0.483f,
		-0.305f, 0.483f,
		-0.278f, 0.48f,
		-0.275f, 0.56f,
		-0.32f, 0.55f,//
		-0.27f, 0.46f,
		-0.24f, 0.46f,
		-0.23f, 0.51f,
		-0.278f, 0.48f,//
		-0.278f, 0.48f,
		-0.305f, 0.483f,
		-0.32f, 0.455f,
		-0.295f, 0.445f,//
		-0.295f, 0.445f,
		-0.32f, 0.455f,
		-0.36f, 0.47f,
		-0.36f, 0.34f,
		-0.325f, 0.335f,
		-0.318f, 0.363f,
		-0.3f, 0.38f,
		-0.28f, 0.415f,
		-0.286f, 0.435f,//
		-0.24f, 0.46f,
		-0.27f, 0.46f,
		-0.286f, 0.435f,
		-0.28f, 0.415f,
		-0.28f, 0.36f,
		-0.24f, 0.37f,//
		-0.28f, 0.36f,
		-0.3f, 0.38f,
		-0.318f, 0.363f,
		-0.315f, 0.35f,
		-0.31f, 0.32f,
		-0.3f, 0.31f,
		-0.26f, 0.305f,
		-0.24f, 0.305f,
		-0.235f, 0.33f,//
		-0.3f, 0.29f,
		-0.28f, 0.28f,
		-0.26f, 0.305f,
		-0.3f, 0.31f,//
		-0.325f, 0.35f,
		-0.33f, 0.31f,
		-0.31f, 0.32f,
		-0.315f, 0.35f,//
		-0.24f, 0.37f,
		-0.28f, 0.36f,
		-0.24f, 0.305f,
		-0.235f, 0.33f,
		-0.195f, 0.333f,
		-0.2f, 0.37f,	//
		-0.2f, 0.37f,
		-0.195f, 0.333f,
		-0.136f, 0.343f,
		-0.145f, 0.385f,
		-0.146f, 0.42f,
		-0.178f, 0.44f,
		-0.18f, 0.39f,
		-0.205f, 0.4f,//
		-0.195f, 0.32f,
		-0.18f, 0.31f,
		-0.136f, 0.343f,
		-0.195f, 0.333f,//
		-0.146f, 0.42f,
		-0.178f, 0.44f,
		-0.208f, 0.445f,
		-0.2f, 0.47f,
		-0.17f, 0.5f,
		-0.14f, 0.5f,
		-0.12f, 0.46f,
		-0.126f, 0.445f,//
		-0.208f, 0.445f,
		-0.2f, 0.47f,
		-0.24f, 0.46f,
		-0.24f, 0.445f,//
		-0.208f, 0.445f,
		-0.225f, 0.445f,
		-0.205f, 0.4f,
		-0.18f, 0.39f, //
		-0.2f, 0.47f,
		-0.17f, 0.5f,
		-0.22f, 0.54f,
		-0.23f, 0.51f,//
		-0.14f, 0.5f,
		-0.17f, 0.5f,
		-0.155f, 0.58f,
		-0.11f, 0.58f,//
		-0.11f, 0.58f,
		-0.108f, 0.65f,
		-0.12f, 0.658f,
		-0.19f, 0.615f,
		-0.21f, 0.585f,
		-0.155f, 0.58f,
		-0.11f, 0.58f,//
		-0.108f, 0.65f,
		-0.155f, 0.58f,
		-0.11f, 0.58f,
		-0.083f, 0.625f,
		-0.078f, 0.65f,
		-0.09f, 0.66f,//
		-0.126f, 0.445f,
		-0.146f, 0.42f,
		-0.128f, 0.43f, //
		-0.145f, 0.385f,
		-0.136f, 0.343f,
		0.0f, 0.343f,
		-0.05f, 0.39f,//
		-0.05f, 0.39f,
		0.0f, 0.343f,
		0.018f, 0.35f,
		0.02f, 0.39f,
		-0.01f, 0.4f,//
		-0.518f, 0.173f,
		-0.59f, 0.2f,
		-0.568f, 0.14f,
		-0.54f, 0.1f,
		-0.514f, 0.088f,//
		-0.514f, 0.088f,
		-0.41f, 0.14f,
		-0.41f, 0.15f,
		-0.41f, 0.193f,
		-0.42f, 0.2f,
		-0.518f, 0.173f,//
		-0.38f, 0.19f,
		-0.37f, 0.198f,
		-0.37f, 0.21f,
		-0.41f, 0.193f, //
		-0.41f, 0.193f,
		-0.39f, 0.17f,
		-0.375f, 0.18f,
		-0.38f, 0.19f,//
		-0.4f, 0.15f,
		-0.38f, 0.16f,
		-0.39f, 0.17f,
		-0.41f, 0.15f,//
		-0.41f, 0.193f,
		-0.42f, 0.2f,
		-0.41f, 0.15f,
		-0.39f, 0.17f,//
		-0.355f, 0.208f,
		-0.355f, 0.192f,
		-0.24f, 0.243f,//
		-0.15f, 0.26f,
		-0.14f, 0.22f,
		-0.008f, 0.085f,
		0.005f, 0.11f,
		0.008f, 0.15f,
		0.0f, 0.165f,//
		-0.01f, 0.06f,
		-0.008f, 0.085f,
		-0.14f, 0.22f
	};

	glInterleavedArrays(GL_V2F, 0, vertices_興);
}

void setupInterleave_大(void) {
	static GLfloat vertices_大[] = {
		0.47f, 0.61f,
		0.46f, 0.55f,
		0.48f, 0.54f,
		0.505f, 0.6f,
		0.512f, 0.615f,
		0.51f, 0.645f,
		0.498f, 0.65f,
		0.485f, 0.645f,//
		0.505f, 0.6f,
		0.48f, 0.54f,
		0.48f, 0.483f,
		0.5f, 0.495f,//
		0.48f, 0.54f,
		0.46f, 0.55f,
		0.44f, 0.475f,
		0.468f, 0.483f,//
		0.575f, 0.466f,
		0.575f, 0.48f,
		0.588f, 0.49f,
		0.58f, 0.5f,
		0.5f, 0.495f,//
		0.565f, 0.45f,
		0.58f, 0.457f,
		0.575f, 0.466f,
		0.5f, 0.495f,//
		0.5f, 0.432f,
		0.55f, 0.435f,
		0.57f, 0.44f,
		0.565f, 0.45f,
		0.5f, 0.495f, //
		0.5f, 0.432f,
		0.455f, 0.42f,
		0.44f, 0.475f,
		0.468f, 0.483f,
		0.48f, 0.483f,
		0.5f, 0.495f,//
		0.41f, 0.405f,
		0.412f, 0.38f,
		0.45f, 0.36f,
		0.455f, 0.42f,
		0.44f, 0.475f,//
		0.28f, 0.414f,
		0.32f, 0.37f,
		0.41f, 0.405f,
		0.44f, 0.475f,//
		0.28f, 0.414f,
		0.26f, 0.418f,
		0.185f, 0.39f,
		0.183f, 0.36f,
		0.191f, 0.36f,//
		0.191f, 0.36f,
		0.215f, 0.315f,
		0.255f, 0.315f,
		0.275f, 0.325f,
		0.32f, 0.37f,
		0.28f, 0.414f, //
		0.412f, 0.38f,
		0.385f, 0.335f,
		0.385f, 0.32f,
		0.42f, 0.28f,
		0.438f, 0.32f,
		0.45f, 0.36f,//
		0.36f, 0.29f,
		0.36f, 0.195f,
		0.4f, 0.24f,
		0.42f, 0.28f,
		0.385f, 0.32f,//
		0.36f, 0.195f,
		0.335f, 0.19f,
		0.29f, 0.187f,
		0.32f, 0.25f,
		0.36f, 0.29f,//
		0.29f, 0.187f,
		0.32f, 0.25f,
		0.28f, 0.225f,
		0.275f, 0.213f,
		0.27f, 0.195f,//
		0.27f, 0.195f,
		0.275f, 0.213f,
		0.26f, 0.21f,
		0.24f, 0.19f,
		0.25f, 0.183f, //
		0.59f, 0.23f,
		0.672f, 0.2f,
		0.68f, 0.22f,
		0.66f, 0.25f,
		0.48f, 0.32f,//
		0.615f, 0.178f,
		0.64f, 0.15f,
		0.67f, 0.18f,
		0.672f, 0.2f,
		0.59f, 0.23f,//
		0.59f, 0.23f,
		0.57f, 0.189f,
		0.605f, 0.17f,
		0.615f, 0.178f,//
		0.51f, 0.185f,
		0.525f, 0.18f,
		0.54f, 0.18f,
		0.57f, 0.189f,
		0.59f, 0.23f
	};

	glInterleavedArrays(GL_V2F, 0, vertices_大);
}

void setupInterleave_學(void) {
	static GLfloat vertices_學[] = {
		0.887f, 0.613f,
		0.92f, 0.594f,
		0.96f, 0.637f,
		0.96f, 0.65f,
		0.935f, 0.683f,//
		0.865f, 0.49f,
		0.86f, 0.5f,
		0.855f, 0.52f,
		0.847f, 0.55f,
		0.853f, 0.61f,
		0.86f, 0.64f,
		0.887f, 0.613f,
		0.92f, 0.594f,//
		0.865f, 0.49f,
		0.945f, 0.56f,
		0.953f, 0.58f,
		0.95f, 0.59f,
		0.92f, 0.594f,//
		0.945f, 0.56f,
		0.865f, 0.49f,
		0.92f, 0.485f,
		0.92f, 0.51f,
		0.93f, 0.523f,
		0.953f, 0.535f,
		0.954f, 0.55f,//
		0.865f, 0.36f,
		0.888f, 0.3f,
		0.908f, 0.37f,
		0.908f, 0.415f,
		0.96f, 0.455f,
		0.972f, 0.48f,
		0.92f, 0.485f,
		0.865f, 0.49f,//
		0.825f, 0.33f,
		0.86f, 0.3f,
		0.888f, 0.3f,
		0.865f, 0.36f, //
		0.825f, 0.33f,
		0.84f, 0.28f,
		0.86f, 0.3f,//
		0.815f, 0.24f,
		0.84f, 0.28f,
		0.825f, 0.33f,//
		0.82f, 0.35f,
		0.77f, 0.28f,
		0.815f, 0.24f,
		0.825f, 0.33f,//
		0.77f, 0.28f,
		0.755f, 0.26f,
		0.745f, 0.24f,
		0.745f, 0.2f,
		0.768f, 0.18f,
		0.785f, 0.18f,
		0.8f, 0.2f,
		0.815f, 0.24f,//
		0.905f, 0.37f,
		0.888f, 0.3f,
		0.91f, 0.328f,//
		0.91f, 0.328f,
		0.925f, 0.328f,
		0.905f, 0.37f, //	
		0.905f, 0.37f,
		0.925f, 0.328f,
		1.21f, 0.416f,
		1.105f, 0.425f,
		1.055f, 0.42f,
		0.98f, 0.4f,//
		1.25f, 0.453f,
		1.16f, 0.44f,
		1.105f, 0.425f,
		1.21f, 0.416f,//
		1.21f, 0.416f,
		1.225f, 0.412f,
		1.28f, 0.45f,
		1.25f, 0.453f,//
		1.235f, 0.4f,
		1.305f, 0.372f,
		1.32f, 0.395f,
		1.32f, 0.415f,
		1.31f, 0.431f,
		1.28f, 0.45f,
		1.225f, 0.412f,//
		1.235f, 0.4f,
		1.233f, 0.37f,
		1.243f, 0.363f,
		1.305f, 0.372f,//
		1.16f, 0.33f,
		1.225f, 0.358f,
		1.233f, 0.37f,
		1.235f, 0.4f, //
		0.92f, 0.485f,
		0.96f, 0.455f,
		0.972f, 0.48f,
		0.98f, 0.525f,//
		1.0f, 0.44f,
		0.998f, 0.495f,
		0.998f, 0.51f,
		0.99f, 0.53f,
		0.98f, 0.525f,
		0.972f, 0.48f,//
		1.0f, 0.44f,
		1.055f, 0.42f,
		1.065f, 0.445f,
		1.065f, 0.457f,
		1.05f, 0.47f,
		1.02f, 0.488f,
		0.998f, 0.495f,//
		1.0f, 0.44f,
		0.985f, 0.425f,
		0.98f, 0.4f,
		1.055f, 0.42f,//
		0.99f, 0.543f,
		0.99f, 0.53f,
		0.998f, 0.51f,
		1.03f, 0.54f,
		1.065f, 0.595f,
		1.01f, 0.59f,//
		1.01f, 0.59f,
		0.965f, 0.585f,
		0.965f, 0.565f,
		0.99f, 0.543f,//
		1.03f, 0.54f,
		1.07f, 0.555f,
		1.093f, 0.57f,
		1.098f, 0.594f,
		1.065f, 0.595f,//
		1.03f, 0.54f,
		1.04f, 0.52f,
		1.06f, 0.54f,
		1.07f, 0.555f,//
		1.02f, 0.488f,
		1.05f, 0.47f,
		1.07f, 0.52f,
		1.06f, 0.54f,
		1.04f, 0.52f,//
		1.065f, 0.595f,
		1.065f, 0.607f,
		1.085f, 0.63f,
		1.085f, 0.642f,
		1.074f, 0.66f,
		1.055f, 0.675f,
		1.01f, 0.59f,//
		1.088f, 0.615f,
		1.108f, 0.594f,
		1.155f, 0.594f,
		1.12f, 0.62f,//
		1.155f, 0.594f,
		1.2f, 0.6f,
		1.218f, 0.62f,
		1.218f, 0.655f,
		1.2f, 0.665f,
		1.18f, 0.66f,
		1.15f, 0.638f,
		1.12f, 0.62f,//
		1.16f, 0.58f,
		1.2f, 0.6f,
		1.155f, 0.594f,//
		1.073f, 0.54f,
		1.093f, 0.52f,
		1.1f, 0.56f,
		1.093f, 0.57f,
		1.07f, 0.555f,//
		1.1f, 0.56f,
		1.093f, 0.52f,
		1.093f, 0.51f,
		1.115f, 0.453f,
		1.17f, 0.46f,
		1.177f, 0.48f,
		1.175f, 0.51f,
		1.16f, 0.58f,//
		1.16f, 0.58f,
		1.175f, 0.51f,
		1.2f, 0.6f,//
		1.08f, 0.48f,
		1.073f, 0.47f,
		1.085f, 0.453f,
		1.115f, 0.453f,//
		1.115f, 0.453f,
		1.093f, 0.51f,
		1.08f, 0.505f,
		1.08f, 0.48f,//
		1.16f, 0.44f,
		1.17f, 0.46f,
		1.115f, 0.453f,//
		1.115f, 0.453f,
		1.105f, 0.425f,
		1.16f, 0.44f,//
		1.02f, 0.318f,
		0.995f, 0.31f,
		1.02f, 0.29f,
		1.04f, 0.283f,
		1.063f, 0.283f,//
		1.063f, 0.283f,
		1.093f, 0.283f,
		1.11f, 0.305f,
		1.06f, 0.342f,
		1.02f, 0.318f,//
		1.11f, 0.305f,
		1.12f, 0.33f,
		1.108f, 0.37f,
		1.093f, 0.37f,
		1.08f, 0.36f,
		1.06f, 0.342f,//
		1.043f, 0.255f,
		1.043f, 0.24f,
		1.06f, 0.215f,
		1.08f, 0.21f,
		1.13f, 0.22f,
		1.145f, 0.227f,
		1.12f, 0.258f,
		1.11f, 0.27f,
		1.093f, 0.287f, 
		1.063f, 0.287f,//
		0.945f, 0.21f,
		0.94f, 0.185f,
		1.06f, 0.215f,
		1.043f, 0.24f,//
		0.945f, 0.21f,
		0.935f, 0.218f,
		0.925f, 0.21f,
		0.925f, 0.19f,
		0.94f, 0.185f,//
		1.12f, 0.258f,
		1.2f, 0.263f,
		1.145f, 0.227f,
		1.13f, 0.22f,//
		1.2f, 0.263f,
		1.145f, 0.227f,
		1.17f, 0.23f,//
		1.17f, 0.23f,
		1.225f, 0.22f,
		1.24f, 0.23f,
		1.23f, 0.253f,
		1.2f, 0.263f,//
		1.08f, 0.21f,
		1.088f, 0.16f,
		1.12f, 0.02f,
		1.13f, 0.22f,  //
		1.11f, -0.01f,
		1.07f, -0.04f,
		1.06f, 0.05f,
		1.08f, 0.1f,//
		1.03f, -0.066f,
		1.07f, -0.04f,
		1.06f, 0.05f,
		1.03f, 0.01f,//
		1.03f, 0.01f,
		1.0f, -0.02f,
		0.98f, -0.093f,
		1.03f, -0.066f,//
		0.9f, -0.12f,
		0.94f, -0.11f,
		0.98f, -0.093f,
		1.0f, -0.02f,
		0.9f, -0.08f,//
		0.9f, -0.12f,
		0.87f, -0.124f,
		0.84f, -0.12f,
		0.82f, -0.118f,
		0.78f, -0.105f,
		0.82f, -0.095f,
		0.86f, -0.09f,
		0.9f, -0.08f,//
		0.78f, -0.09f,
		0.78f, -0.105f,
		0.82f, -0.095f,//
		0.73f, -0.07f,
		0.78f, -0.105f,
		0.78f, -0.09f,//
		1.11f, -0.01f,
		1.12f, 0.02f,
		1.088f, 0.16f,
		1.08f, 0.1f
	};

	glInterleavedArrays(GL_V2F, 0, vertices_學);
}

void setupInterleave_logo(void) {
	static GLfloat vertices_logo[] = {
		1.705f, -0.03f,
		1.8f, 0.02f,
		1.755f, 0.1f, //
		1.785f, 0.2f,
		1.755f, 0.1f, 
		1.8f, 0.02f, 
		1.9f, 0.05f,//
		1.9f, 0.05f,
		2.0f, 0.07f,
		1.81f, 0.32f,
		1.785f, 0.2f,//
		1.82f, 0.42f,
		1.81f, 0.32f,
		2.0f, 0.07f,
		2.06f, 0.08f,//
		2.06f, 0.08f,
		2.12f, 0.082f,
		1.82f, 0.5f,
		1.82f, 0.42f,//
		1.81f, 0.6f,
		1.82f, 0.5f,
		2.12f, 0.082f,
		2.18f, 0.08f,//
		2.18f, 0.08f,
		2.24f, 0.07f,
		1.79f, 0.675f,
		1.81f, 0.6f,//
		2.24f, 0.07f,
		2.308f, 0.19f,
		2.27f, 0.264f,
		2.24f, 0.315f,
		2.22f, 0.35f,
		2.18f, 0.4f,
		2.15f, 0.438f,
		2.11f, 0.48f,
		2.08f, 0.508f,
		2.047f, 0.535f,
		2.0f, 0.568f,
		1.94f, 0.605f,
		1.86f, 0.648f,
		1.79f, 0.675f,//
		2.308f, 0.19f,
		2.24f, 0.07f,
		2.36f, 0.045f,
		2.345f, 0.1f,//
		1.76f, 0.77f,
		1.773f, 0.725f,
		1.86f, 0.695f,
		1.88f, 0.738f,//
		1.88f, 0.738f,
		1.86f, 0.695f,
		1.94f, 0.66f,
		2.0f, 0.72f,//
		2.0f, 0.72f,
		1.94f, 0.66f,
		2.02f, 0.61f,
		2.1f, 0.712f,//
		2.1f, 0.712f,
		2.02f, 0.61f,
		2.08f, 0.557f,
		2.18f, 0.712f,//
		2.18f, 0.712f,
		2.08f, 0.557f,
		2.142f, 0.5f,
		2.28f, 0.72f,//
		2.28f, 0.72f,
		2.142f, 0.5f,
		2.197f, 0.44f,
		2.4f, 0.733f,//
		2.4f, 0.733f,
		2.197f, 0.44f,
		2.24f, 0.38f,
		2.53f, 0.76f,//
		2.503f, 0.7f,
		2.197f, 0.44f,
		2.24f, 0.38f,
		2.473f, 0.6f,//
		2.473f, 0.6f,
		2.197f, 0.44f,
		2.24f, 0.38f,
		2.46f, 0.54f,//
		2.46f, 0.54f,
		2.197f, 0.44f,
		2.24f, 0.38f,
		2.46f, 0.4f,//
		2.47f, 0.3f,
		2.46f, 0.4f,
		2.24f, 0.38f,
		2.295f, 0.295f,//
		2.295f, 0.295f,
		2.33f, 0.2f,
		2.49f, 0.2f,
		2.47f, 0.3f,//
		2.523f, 0.1f,
		2.49f, 0.2f,
		2.33f, 0.2f,
		2.363f, 0.1f,//
		2.363f, 0.1f,
		2.373f, 0.045f,
		2.58f, -0.04f,
		2.523f, 0.1f,//
		2.02f, 0.61f,
		2.142f, 0.5f,
		2.473f, 0.6f,
		2.503f, 0.7f,//
		2.4f, 0.733f,
		2.53f, 0.76f,
		2.503f, 0.7f,//
		2.4f, 0.733f,
		2.28f, 0.72f,
		2.473f, 0.6f,
		2.503f, 0.7f,//
		2.047f, 0.535f, //左半圓點
		2.0f, 0.5f,
		1.978f, 0.46f,
		1.965f, 0.42f,
		1.965f, 0.37f,
		1.975f, 0.33f,
		1.992f, 0.295f,
		2.02f, 0.26f,
		2.06f, 0.23f,
		2.1f, 0.215f,
		2.16f, 0.212f,
		2.2f, 0.22f,
		2.24f, 0.24f,
		2.27f, 0.264f,
		2.24f, 0.315f,
		2.22f, 0.35f,
		2.18f, 0.4f,
		2.15f, 0.438f,
		2.11f, 0.48f,
		2.08f, 0.508f, //
		2.26f, 0.525f, //右半
		2.22f, 0.55f,
		2.18f, 0.565f,
		2.12f, 0.567f,
		2.08f, 0.557f,
		2.142f, 0.5f,//
		2.142f, 0.5f,
		2.197f, 0.44f,
		2.3f, 0.48f,
		2.26f, 0.525f,//
		2.317f, 0.44f,
		2.3f, 0.48f,
		2.197f, 0.44f,
		2.24f, 0.38f,//
		2.295f, 0.295f,
		2.315f, 0.33f,
		2.323f, 0.365f,
		2.325f, 0.4f,
		2.317f, 0.44f,
		2.24f, 0.38f
	};
	glInterleavedArrays(GL_V2F, 0, vertices_logo);
}

void setupInterleave_National(void) {
	static GLfloat vertices_National[] = {
		-2.55f, -0.475f,
		-2.52f, -0.475f,
		-2.55f, -0.6f,
		-2.52f, -0.7f,
		-2.55f, -0.7f,//
		-2.52f, -0.475f,
		-2.52f, -0.53f,
		-2.395f, -0.655f,
		-2.395f, -0.7f,//
		-2.395f, -0.475f,
		-2.36f, -0.475f,
		-2.395f, -0.655f,
		-2.36f, -0.7f,
		-2.395f, -0.7f,//
		-2.3f, -0.585f,
		-2.273f, -0.59f,
		-2.28f, -0.553f,
		-2.26f, -0.57f,
		-2.26f, -0.543f,
		-2.24f, -0.56f,
		-2.24f, -0.54f,
		-2.2f, -0.562f,
		-2.2f, -0.54f,
		-2.19f, -0.6f,
		-2.18f, -0.548f,
		-2.19f, -0.6f,
		-2.16f, -0.58f,
		-2.185f, -0.685f,
		-2.16f, -0.69f,
		-2.185f, -0.7f,
		-2.15f, -0.7f,//
		-2.19f, -0.6f,
		-2.19f, -0.625f,
		-2.24f, -0.608f,
		-2.26f, -0.638f,
		-2.27f, -0.615f,
		-2.273f, -0.65f,
		-2.29f, -0.63f,
		-2.276f, -0.66f,
		-2.3f, -0.643f,
		-2.276f, -0.67f,
		-2.305f, -0.67f,
		-2.26f, -0.688f,
		-2.28f, -0.7f,
		-2.24f, -0.69f,
		-2.25f, -0.71f,
		-2.22f, -0.685f,
		-2.22f, -0.708f,
		-2.185f, -0.66f,
		-2.185f, -0.685f,//
		-2.06f, -0.485f,
		-2.09f, -0.5f,
		-2.06f, -0.678f,
		-2.09f, -0.69f,
		-2.053f, -0.685f,
		-2.065f, -0.71f,
		-2.03f, -0.688f,
		-2.03f, -0.71f,//
		-2.11f, -0.54f,
		-2.11f, -0.56f,
		-2.035f, -0.54f,
		-2.035f, -0.56f,//
		-1.98f, -0.48f,
		-1.95f, -0.48f,
		-1.98f, -0.51f,
		-1.95f, -0.51f,//
		-1.98f, -0.54f,
		-1.95f, -0.54f,
		-1.98f, -0.705f,
		-1.95f, -0.705f,//
		-1.9f, -0.6f,
		-1.867f, -0.59f,
		-1.88f, -0.56f,
		-1.85f, -0.57f,
		-1.84f, -0.54f,
		-1.82f, -0.56f,
		-1.82f, -0.536f,
		-1.8f, -0.565f,
		-1.8f, -0.54f,
		-1.783f, -0.58f,
		-1.77f, -0.555f,
		-1.775f, -0.6f,
		-1.75f, -0.58f,
		-1.775f, -0.64f,
		-1.743f, -0.62f,
		-1.778f, -0.66f,
		-1.75f, -0.665f,
		-1.8f, -0.683f,
		-1.77f, -0.69f,
		-1.82f, -0.689f,
		-1.8f, -0.71f,
		-1.845f, -0.683f,
		-1.83f, -0.713f,
		-1.865f, -0.663f,
		-1.86f, -0.7f,
		-1.87f, -0.64f,
		-1.89f, -0.67f,
		-1.873f, -0.62f,
		-1.903f, -0.63f,
		-1.867f, -0.59f,
		-1.9f, -0.6f,//
		-1.69f, -0.54f,
		-1.66f, -0.54f,
		-1.69f, -0.705f,
		-1.66f, -0.705f,//
		-1.66f, -0.56f,
		-1.66f, -0.583f,
		-1.63f, -0.54f,
		-1.63f, -0.563f,
		-1.6f, -0.538f,
		-1.605f, -0.563f,
		-1.57f, -0.55f,
		-1.583f, -0.58f,
		-1.55f, -0.58f,
		-1.583f, -0.705f,
		-1.55f, -0.705f, //
		-1.49f, -0.585f,
		-1.463f, -0.59f,
		-1.47f, -0.553f,
		-1.45f, -0.57f,
		-1.45f, -0.543f,
		-1.43f, -0.56f,
		-1.43f, -0.54f,
		-1.39f, -0.562f,
		-1.39f, -0.54f,
		-1.38f, -0.6f,
		-1.37f, -0.548f,
		-1.38f, -0.6f,
		-1.35f, -0.58f,
		-1.375f, -0.685f,
		-1.35f, -0.69f,
		-1.375f, -0.7f,
		-1.34f, -0.7f,//
		-1.38f, -0.6f,
		-1.38f, -0.625f,
		-1.43f, -0.608f,
		-1.45f, -0.638f,
		-1.46f, -0.615f,
		-1.463f, -0.65f,
		-1.48f, -0.63f,
		-1.466f, -0.66f,
		-1.49f, -0.643f,
		-1.466f, -0.67f,
		-1.495f, -0.67f,
		-1.45f, -0.688f,
		-1.47f, -0.7f,
		-1.43f, -0.69f,
		-1.44f, -0.71f,
		-1.41f, -0.685f,
		-1.41f, -0.708f,
		-1.375f, -0.66f,
		-1.375f, -0.685f,//
		-1.285f, -0.475f,
		-1.255f, -0.475f,
		-1.285f, -0.708f,
		-1.255f, -0.708f
	};
	glInterleavedArrays(GL_V2F, 0, vertices_National);
}

void setupInterleave_Chung(void) {
	static GLfloat vertices_Chung[] = {
		-0.923f, -0.545f,
		-0.95f, -0.546f,
		-0.925f, -0.53f,
		-0.97f, -0.52f,
		-0.95f, -0.495f,
		-0.995f, -0.505f,
		-0.98f, -0.48f,
		-1.02f, -0.503f,
		-1.03f, -0.475f,
		-1.05f, -0.51f,
		-1.075f, -0.49f,
		-1.085f, -0.54f,
		-1.112f, -0.53f,
		-1.095f, -0.57f,
		-1.123f, -0.557f,
		-1.095f, -0.61f,
		-1.123f, -0.62f,
		-1.088f, -0.64f,
		-1.11f, -0.66f,
		-1.06f, -0.67f,
		-1.07f, -0.7f,
		-1.03f, -0.683f,
		-1.035f, -0.713f,
		-1.01f, -0.684f,
		-1.0f, -0.713f,
		-0.98f, -0.674f,
		-0.96f, -0.695f,
		-0.953f, -0.645f,
		-0.923f, -0.65f,
		-0.95f, -0.63f,
		-0.92f, -0.63f,//
		-0.862f, -0.475f,
		-0.835f, -0.475f,
		-0.862f, -0.705f,
		-0.835f, -0.705f,//
		-0.835f, -0.56f,
		-0.835f, -0.583f,
		-0.805f, -0.54f,
		-0.805f, -0.563f,
		-0.775f, -0.538f,
		-0.78f, -0.563f,
		-0.745f, -0.55f,
		-0.758f, -0.58f,
		-0.725f, -0.58f,
		-0.758f, -0.705f,
		-0.725f, -0.705f,//
		-0.662f, -0.54f,
		-0.63f, -0.54f,
		-0.662f, -0.66f,
		-0.63f, -0.65f,
		-0.653f, -0.69f,
		-0.625f, -0.67f,
		-0.635f, -0.705f,
		-0.61f, -0.685f,
		-0.61f, -0.715f,
		-0.59f, -0.686f,
		-0.595f, -0.715f,
		-0.58f, -0.683f,
		-0.57f, -0.702f,
		-0.55f, -0.66f,
		-0.55f, -0.683f,//
		-0.55f, -0.54f,
		-0.52f, -0.54f,
		-0.55f, -0.705f,
		-0.52f, -0.705f, //
		-0.46f, -0.54f,
		-0.43f, -0.54f,
		-0.46f, -0.705f,
		-0.43f, -0.705f,//
		-0.43f, -0.56f,
		-0.43f, -0.583f,
		-0.4f, -0.54f,
		-0.4f, -0.563f,
		-0.37f, -0.538f,
		-0.375f, -0.563f,
		-0.34f, -0.55f,
		-0.353f, -0.58f,
		-0.32f, -0.58f,
		-0.353f, -0.705f,
		-0.32f, -0.705f,//
		-0.15f, -0.558f,
		-0.15f, -0.59f,
		-0.18f, -0.537f,
		-0.17f, -0.565f,
		-0.2f, -0.535f,
		-0.19f, -0.56f,
		-0.22f, -0.538f,
		-0.21f, -0.563f,
		-0.24f, -0.55f,
		-0.23f, -0.58f,
		-0.26f, -0.58f,
		-0.236f, -0.6f,
		-0.27f, -0.62f,
		-0.236f, -0.64f,
		-0.265f, -0.65f,
		-0.225f, -0.667f,
		-0.25f, -0.68f,
		-0.21f, -0.683f,
		-0.22f, -0.705f,
		-0.19f, -0.685f,
		-0.19f, -0.71f,
		-0.17f, -0.678f,
		-0.17f, -0.705f,
		-0.15f, -0.65f,
		-0.15f, -0.685f,//
		-0.15f, -0.54f,
		-0.12f, -0.54f,
		-0.15f, -0.72f,
		-0.12f, -0.73f,
		-0.16f, -0.74f,
		-0.14f, -0.76f,
		-0.18f, -0.75f,
		-0.18f, -0.775f,
		-0.2f, -0.753f,
		-0.2f, -0.778f,
		-0.22f, -0.75f,
		-0.22f, -0.773f,
		-0.23f, -0.74f,
		-0.26f, -0.745f,
		-0.233f, -0.725f,
		-0.262f, -0.725f
	};
	glInterleavedArrays(GL_V2F, 0, vertices_Chung);
}

void setupInterleave_Hsing(void) {
	static GLfloat vertices_Hsing[] = {
		0.023f, -0.475f,
		0.055f, -0.475f,
		0.023f, -0.705f,
		0.055f, -0.705f,//
		0.055f, -0.57f,
		0.055f, -0.603f,
		0.18f, -0.57f,
		0.18f, -0.603f,//
		0.18f, -0.475f,
		0.213f, -0.475f,
		0.18f, -0.705f,
		0.213f, -0.705f,//
		0.4f, -0.585f,
		0.375f, -0.59f,
		0.398f, -0.57f,
		0.365f, -0.57f,
		0.38f, -0.547f,
		0.355f, -0.56f,
		0.36f, -0.54f,
		0.34f, -0.558f,
		0.338f, -0.536f,
		0.32f, -0.56f,
		0.31f, -0.54f,
		0.302f, -0.569f,
		0.28f, -0.555f,
		0.298f, -0.58f,
		0.27f, -0.574f,
		0.302f, -0.59f,
		0.27f, -0.6f,
		0.32f, -0.6f,
		0.31f, -0.63f,
		0.38f, -0.618f,
		0.365f, -0.644f,
		0.408f, -0.64f,
		0.381f, -0.66f,
		0.408f, -0.67f,
		0.375f, -0.676f,
		0.395f, -0.69f,
		0.36f, -0.685f,
		0.36f, -0.712f,
		0.34f, -0.69f,
		0.34f, -0.715f,
		0.308f, -0.68f,
		0.3f, -0.703f,
		0.297f, -0.665f,
		0.277f, -0.68f,
		0.295f, -0.653f,
		0.268f, -0.653f,//
		0.46f, -0.48f,
		0.49f, -0.48f,
		0.46f, -0.51f,
		0.49f, -0.51f,//
		0.46f, -0.54f,
		0.49f, -0.54f,
		0.46f, -0.705f,
		0.49f, -0.705f,//
		0.553f, -0.54f,
		0.583f, -0.54f,
		0.553f, -0.705f,
		0.583f, -0.705f,//
		0.583f, -0.56f,
		0.583f, -0.583f,
		0.613f, -0.54f,
		0.613f, -0.563f,
		0.643f, -0.538f,
		0.638f, -0.563f,
		0.673f, -0.55f,
		0.66f, -0.58f,
		0.693f, -0.58f,
		0.66f, -0.705f,
		0.693f, -0.705f, //
		0.863f, -0.558f,
		0.863f, -0.59f,
		0.833f, -0.537f,
		0.843f, -0.565f,
		0.813f, -0.535f,
		0.823f, -0.56f,
		0.793f, -0.538f,
		0.803f, -0.563f,
		0.773f, -0.55f,
		0.783f, -0.58f,
		0.753f, -0.58f,
		0.777f, -0.6f,
		0.743f, -0.62f,
		0.777f, -0.64f,
		0.748f, -0.65f,
		0.788f, -0.667f,
		0.763f, -0.68f,
		0.803f, -0.683f,
		0.793f, -0.705f,
		0.823f, -0.685f,
		0.823f, -0.71f,
		0.843f, -0.678f,
		0.843f, -0.705f,
		0.863f, -0.65f,
		0.863f, -0.685f,//
		0.863f, -0.54f,
		0.893f, -0.54f,
		0.863f, -0.72f,
		0.893f, -0.73f,
		0.853f, -0.74f,
		0.873f, -0.76f,
		0.833f, -0.75f,
		0.833f, -0.775f,
		0.813f, -0.753f,
		0.813f, -0.778f,
		0.793f, -0.75f,
		0.793f, -0.773f,
		0.783f, -0.74f,
		0.753f, -0.745f,
		0.78f, -0.725f,
		0.751f, -0.725f
	};
	glInterleavedArrays(GL_V2F, 0, vertices_Hsing);
}

void setupInterleave_University(void) {
	static GLfloat vertices_University[] = {
		1.032f, -0.475f,
		1.065f, -0.475f,
		1.032f, -0.64f,
		1.065f, -0.64f,
		1.05f, -0.68f,
		1.075f, -0.66f,
		1.1f, -0.71f,
		1.1f, -0.68f,
		1.125f, -0.715f,
		1.125f, -0.685f,
		1.16f, -0.71f,
		1.15f, -0.682f,
		1.195f, -0.693f,
		1.18f, -0.665f,
		1.22f, -0.66f,
		1.188f, -0.64f,
		1.22f, -0.475f,
		1.188f, -0.475f,//
		1.286f, -0.54f,
		1.316f, -0.54f,
		1.286f, -0.705f,
		1.316f, -0.705f,//
		1.316f, -0.56f,
		1.316f, -0.583f,
		1.346f, -0.54f,
		1.346f, -0.563f,
		1.376f, -0.538f,
		1.371f, -0.563f,
		1.406f, -0.55f,
		1.393f, -0.58f,
		1.426f, -0.58f,
		1.393f, -0.705f,
		1.426f, -0.705f,//
		1.487f, -0.48f,
		1.515f, -0.48f,
		1.487f, -0.51f,
		1.515f, -0.51f,//
		1.487f, -0.54f,
		1.515f, -0.54f,
		1.487f, -0.705f,
		1.515f, -0.705f,//
		1.56f, -0.54f,
		1.595f, -0.54f,
		1.63f, -0.705f,
		1.644f, -0.672f,
		1.66f, -0.705f,
		1.69f, -0.54f,
		1.723f, -0.54f,//
		1.787f, -0.607f,
		1.787f, -0.63f,
		1.885f, -0.607f,
		1.918f, -0.628f,
		1.885f, -0.595f,
		1.913f, -0.59f,
		1.87f, -0.573f,
		1.89f, -0.554f,
		1.857f, -0.563f,
		1.86f, -0.538f,
		1.84f, -0.56f,
		1.84f, -0.535f,
		1.82f, -0.563f,
		1.82f, -0.537f,
		1.797f, -0.58f,
		1.79f, -0.55f,
		1.787f, -0.607f,
		1.76f, -0.58f,
		1.787f, -0.63f,
		1.753f, -0.62f,
		1.793f, -0.66f,
		1.76f, -0.66f,
		1.82f, -0.685f,
		1.78f, -0.69f,
		1.82f, -0.685f,
		1.82f, -0.713f,
		1.84f, -0.69f,
		1.84f, -0.717f,
		1.863f, -0.683f,
		1.87f, -0.71f,
		1.885f, -0.658f,
		1.898f, -0.69f,
		1.885f, -0.658f,
		1.91f, -0.67f,
		1.885f, -0.658f,
		1.915f, -0.658f,//
		1.965f, -0.54f,
		1.996f, -0.54f,
		1.965f, -0.705f,
		1.996f, -0.705f,//
		1.996f, -0.56f,
		1.996f, -0.59f,
		2.015f, -0.54f,
		2.01f, -0.572f,
		2.03f, -0.536f,
		2.03f, -0.567f,
		2.06f, -0.545f,
		2.05f, -0.57f,//
		2.22f, -0.585f,
		2.195f, -0.59f,
		2.218f, -0.57f,
		2.185f, -0.57f,
		2.2f, -0.547f,
		2.175f, -0.56f,
		2.18f, -0.54f,
		2.16f, -0.558f,
		2.158f, -0.536f,
		2.14f, -0.56f,
		2.13f, -0.54f,
		2.122f, -0.569f,
		2.1f, -0.555f,
		2.118f, -0.58f,
		2.09f, -0.574f,
		2.122f, -0.59f,
		2.09f, -0.6f,
		2.14f, -0.6f,
		2.13f, -0.63f,
		2.2f, -0.618f,
		2.185f, -0.644f,
		2.228f, -0.64f,
		2.201f, -0.66f,
		2.228f, -0.67f,
		2.195f, -0.676f,
		2.215f, -0.69f,
		2.18f, -0.685f,
		2.18f, -0.712f,
		2.16f, -0.69f,
		2.16f, -0.715f,
		2.128f, -0.68f,
		2.12f, -0.703f,
		2.117f, -0.665f,
		2.097f, -0.68f,
		2.115f, -0.653f,
		2.088f, -0.653f, //
		2.277f, -0.48f,
		2.305f, -0.48f,
		2.277f, -0.51f,
		2.305f, -0.51f,//
		2.277f, -0.54f,
		2.305f, -0.54f,
		2.277f, -0.705f,
		2.305f, -0.705f, //
		2.405f, -0.485f,
		2.375f, -0.5f,
		2.405f, -0.678f,
		2.375f, -0.69f,
		2.412f, -0.685f,
		2.4f, -0.71f,
		2.435f, -0.688f,
		2.435f, -0.71f,//
		2.355f, -0.54f,
		2.355f, -0.56f,
		2.43f, -0.54f,
		2.43f, -0.56f,//
		2.465f, -0.54f,
		2.495f, -0.54f,
		2.527f, -0.7f,
		2.543f, -0.663f,//
		2.587f, -0.54f,
		2.62f, -0.54f,
		2.543f, -0.663f,
		2.556f, -0.72f,
		2.527f, -0.7f,
		2.545f, -0.74f,
		2.523f, -0.72f,
		2.53f, -0.76f,
		2.51f, -0.742f,
		2.51f, -0.774f,
		2.502f, -0.749f,
		2.478f, -0.774f,
		2.475f, -0.749f
	};
	glInterleavedArrays(GL_V2F, 0, vertices_University);
}

void glDrawArrays_國(void) {
	setupInterleave_國();

	glDrawArrays(GL_POLYGON, 0, 10);
	glDrawArrays(GL_POLYGON, 10, 8);
	glDrawArrays(GL_POLYGON, 18, 4);
	glDrawArrays(GL_POLYGON, 22, 4);
	glDrawArrays(GL_POLYGON, 26, 4);
	glDrawArrays(GL_POLYGON, 30, 5);
	glDrawArrays(GL_POLYGON, 35, 7);
	glDrawArrays(GL_POLYGON, 42, 6);
	glDrawArrays(GL_POLYGON, 48, 5);
	glDrawArrays(GL_POLYGON, 53, 3);
	glDrawArrays(GL_POLYGON, 56, 7);
	glDrawArrays(GL_POLYGON, 63, 5);
	glDrawArrays(GL_POLYGON, 68, 4);
	glDrawArrays(GL_POLYGON, 72, 7);
	glDrawArrays(GL_POLYGON, 79, 4);
	glDrawArrays(GL_POLYGON, 83, 3);
	glDrawArrays(GL_POLYGON, 86, 4);
	glDrawArrays(GL_POLYGON, 90, 3);
	glDrawArrays(GL_POLYGON, 93, 6);
	glDrawArrays(GL_POLYGON, 99, 3);
	glDrawArrays(GL_POLYGON, 102, 4);
	glDrawArrays(GL_POLYGON, 106, 3);
	glDrawArrays(GL_POLYGON, 109, 4);
	glDrawArrays(GL_POLYGON, 113, 4);
	glDrawArrays(GL_POLYGON, 117, 4);
	glDrawArrays(GL_POLYGON, 121, 9);
	glDrawArrays(GL_POLYGON, 130, 3);
	glDrawArrays(GL_POLYGON, 133, 3);
	glDrawArrays(GL_POLYGON, 136, 4);
	glDrawArrays(GL_POLYGON, 140, 4);
	glDrawArrays(GL_POLYGON, 144, 3);
	glDrawArrays(GL_POLYGON, 147, 5);
	glDrawArrays(GL_POLYGON, 152, 3);
	glDrawArrays(GL_POLYGON, 155, 5);
	glDrawArrays(GL_POLYGON, 160, 4);
	glDrawArrays(GL_POLYGON, 164, 4);
	glDrawArrays(GL_POLYGON, 168, 4);
	glDrawArrays(GL_POLYGON, 172, 4);
	glDrawArrays(GL_POLYGON, 176, 4);
	glDrawArrays(GL_POLYGON, 180, 4);
	glDrawArrays(GL_POLYGON, 184, 5);
}

void glDrawArrays_立(void) {
	setupInterleave_立();

	glDrawArrays(GL_POLYGON, 0, 3);
	glDrawArrays(GL_POLYGON, 3, 6);
	glDrawArrays(GL_POLYGON, 9, 6);
	glDrawArrays(GL_POLYGON, 15, 5);
	glDrawArrays(GL_POLYGON, 20, 3);
	glDrawArrays(GL_POLYGON, 23, 8);
	glDrawArrays(GL_POLYGON, 31, 4);
	glDrawArrays(GL_POLYGON, 35, 5);
	glDrawArrays(GL_POLYGON, 40, 4);
	glDrawArrays(GL_POLYGON, 44, 4);
	glDrawArrays(GL_POLYGON, 48, 3);
	glDrawArrays(GL_POLYGON, 51, 4);
	glDrawArrays(GL_POLYGON, 55, 7);
	glDrawArrays(GL_POLYGON, 62, 5);
	glDrawArrays(GL_POLYGON, 67, 7);
	glDrawArrays(GL_POLYGON, 74, 5);
	glDrawArrays(GL_POLYGON, 79, 4);
	glDrawArrays(GL_POLYGON, 83, 4);
	glDrawArrays(GL_POLYGON, 87, 8);
	glDrawArrays(GL_POLYGON, 95, 5);
	glDrawArrays(GL_POLYGON, 100, 4);
	glDrawArrays(GL_POLYGON, 104, 7);
}

void glDrawArrays_中(void) {
	setupInterleave_中();

	glDrawArrays(GL_POLYGON, 0, 4);
	glDrawArrays(GL_POLYGON, 4, 6);
	glDrawArrays(GL_POLYGON, 10, 10);
	glDrawArrays(GL_POLYGON, 20, 5);
	glDrawArrays(GL_POLYGON, 25, 6);
	glDrawArrays(GL_POLYGON, 31, 7);
	glDrawArrays(GL_POLYGON, 38, 3);
	glDrawArrays(GL_POLYGON, 41, 6);
	glDrawArrays(GL_POLYGON, 47, 5);
	glDrawArrays(GL_POLYGON, 52, 7);
	glDrawArrays(GL_POLYGON, 59, 4);
	glDrawArrays(GL_POLYGON, 63, 4);
	glDrawArrays(GL_POLYGON, 67, 4);
	glDrawArrays(GL_POLYGON, 71, 5);
	glDrawArrays(GL_POLYGON, 76, 5);
	glDrawArrays(GL_POLYGON, 81, 5);
}

void glDrawArrays_興(void) {
	setupInterleave_興();

	glDrawArrays(GL_POLYGON, 0, 5);
	glDrawArrays(GL_POLYGON, 5, 6);
	glDrawArrays(GL_POLYGON, 11, 5);
	glDrawArrays(GL_POLYGON, 16, 6);
	glDrawArrays(GL_POLYGON, 22, 4);
	glDrawArrays(GL_POLYGON, 26, 4);
	glDrawArrays(GL_POLYGON, 30, 3);
	glDrawArrays(GL_POLYGON, 33, 6);
	glDrawArrays(GL_POLYGON, 39, 5);
	glDrawArrays(GL_POLYGON, 44, 4);
	glDrawArrays(GL_POLYGON, 48, 4);
	glDrawArrays(GL_POLYGON, 52, 5);
	glDrawArrays(GL_POLYGON, 57, 4);
	glDrawArrays(GL_POLYGON, 61, 6);
	glDrawArrays(GL_POLYGON, 67, 5);
	glDrawArrays(GL_POLYGON, 72, 5);
	glDrawArrays(GL_POLYGON, 77, 4);
	glDrawArrays(GL_POLYGON, 81, 5);
	glDrawArrays(GL_POLYGON, 86, 6);
	glDrawArrays(GL_POLYGON, 92, 5);
	glDrawArrays(GL_POLYGON, 97, 5);
	glDrawArrays(GL_POLYGON, 102, 5);
	glDrawArrays(GL_POLYGON, 107, 4);
	glDrawArrays(GL_POLYGON, 111, 4);
	glDrawArrays(GL_POLYGON, 115, 9);
	glDrawArrays(GL_POLYGON, 124, 6);
	glDrawArrays(GL_POLYGON, 130, 9);
	glDrawArrays(GL_POLYGON, 139, 4);
	glDrawArrays(GL_POLYGON, 143, 4);
	glDrawArrays(GL_POLYGON, 147, 6);
	glDrawArrays(GL_POLYGON, 153, 8);
	glDrawArrays(GL_POLYGON, 161, 4);
	glDrawArrays(GL_POLYGON, 165, 8);
	glDrawArrays(GL_POLYGON, 173, 4);
	glDrawArrays(GL_POLYGON, 177, 4);
	glDrawArrays(GL_POLYGON, 181, 4);
	glDrawArrays(GL_POLYGON, 185, 4);
	glDrawArrays(GL_POLYGON, 189, 7);
	glDrawArrays(GL_POLYGON, 196, 6);
	glDrawArrays(GL_POLYGON, 202, 3);
	glDrawArrays(GL_POLYGON, 205, 4);
	glDrawArrays(GL_POLYGON, 209, 5);
	glDrawArrays(GL_POLYGON, 214, 5);
	glDrawArrays(GL_POLYGON, 219, 6);
	glDrawArrays(GL_POLYGON, 225, 4);
	glDrawArrays(GL_POLYGON, 229, 4);
	glDrawArrays(GL_POLYGON, 233, 4);
	glDrawArrays(GL_POLYGON, 237, 4);
	glDrawArrays(GL_POLYGON, 241, 3);
	glDrawArrays(GL_POLYGON, 244, 6);
	glDrawArrays(GL_POLYGON, 250, 3);
}

void glDrawArrays_大(void) {
	setupInterleave_大();

	glDrawArrays(GL_POLYGON, 0, 8);
	glDrawArrays(GL_POLYGON, 8, 4);
	glDrawArrays(GL_POLYGON, 12, 4);
	glDrawArrays(GL_POLYGON, 16, 5);
	glDrawArrays(GL_POLYGON, 21, 4);
	glDrawArrays(GL_POLYGON, 25, 5);
	glDrawArrays(GL_POLYGON, 30, 6);
	glDrawArrays(GL_POLYGON, 36, 5);
	glDrawArrays(GL_POLYGON, 41, 4);
	glDrawArrays(GL_POLYGON, 45, 5);
	glDrawArrays(GL_POLYGON, 50, 6);
	glDrawArrays(GL_POLYGON, 56, 6);
	glDrawArrays(GL_POLYGON, 62, 5);
	glDrawArrays(GL_POLYGON, 67, 5);
	glDrawArrays(GL_POLYGON, 72, 5);
	glDrawArrays(GL_POLYGON, 77, 5);
	glDrawArrays(GL_POLYGON, 82, 5);
	glDrawArrays(GL_POLYGON, 87, 5);
	glDrawArrays(GL_POLYGON, 92, 4);
	glDrawArrays(GL_POLYGON, 96, 5);
}

void glDrawArrays_學(void) {
	setupInterleave_學();

	glDrawArrays(GL_POLYGON, 0, 5);
	glDrawArrays(GL_POLYGON, 5, 8);
	glDrawArrays(GL_POLYGON, 13, 5);
	glDrawArrays(GL_POLYGON, 18, 7);
	glDrawArrays(GL_POLYGON, 25, 8);
	glDrawArrays(GL_POLYGON, 33, 4);
	glDrawArrays(GL_POLYGON, 37, 3);
	glDrawArrays(GL_POLYGON, 40, 3);
	glDrawArrays(GL_POLYGON, 43, 4);
	glDrawArrays(GL_POLYGON, 47, 8);
	glDrawArrays(GL_POLYGON, 55, 3);
	glDrawArrays(GL_POLYGON, 58, 3);
	glDrawArrays(GL_POLYGON, 61, 6);
	glDrawArrays(GL_POLYGON, 67, 4);
	glDrawArrays(GL_POLYGON, 71, 4);
	glDrawArrays(GL_POLYGON, 75, 7);
	glDrawArrays(GL_POLYGON, 82, 4);
	glDrawArrays(GL_POLYGON, 86, 4);
	glDrawArrays(GL_POLYGON, 90, 4);
	glDrawArrays(GL_POLYGON, 94, 6);
	glDrawArrays(GL_POLYGON, 100, 7);
	glDrawArrays(GL_POLYGON, 107, 4);
	glDrawArrays(GL_POLYGON, 111, 6);
	glDrawArrays(GL_POLYGON, 117, 4);
	glDrawArrays(GL_POLYGON, 121, 5);
	glDrawArrays(GL_POLYGON, 126, 4);
	glDrawArrays(GL_POLYGON, 130, 5);
	glDrawArrays(GL_POLYGON, 135, 7);
	glDrawArrays(GL_POLYGON, 142, 4);
	glDrawArrays(GL_POLYGON, 146, 8);
	glDrawArrays(GL_POLYGON, 154, 3);
	glDrawArrays(GL_POLYGON, 157, 5);
	glDrawArrays(GL_POLYGON, 162, 8);
	glDrawArrays(GL_POLYGON, 170, 3);
	glDrawArrays(GL_POLYGON, 173, 4);
	glDrawArrays(GL_POLYGON, 177, 4);
	glDrawArrays(GL_POLYGON, 181, 3);
	glDrawArrays(GL_POLYGON, 184, 3);
	glDrawArrays(GL_POLYGON, 187, 5);
	glDrawArrays(GL_POLYGON, 192, 5);
	glDrawArrays(GL_POLYGON, 197, 6);
	glDrawArrays(GL_POLYGON, 203, 10);
	glDrawArrays(GL_POLYGON, 213, 4);
	glDrawArrays(GL_POLYGON, 217, 5);
	glDrawArrays(GL_POLYGON, 222, 4);
	glDrawArrays(GL_POLYGON, 226, 3);
	glDrawArrays(GL_POLYGON, 229, 5);
	glDrawArrays(GL_POLYGON, 234, 4);
	glDrawArrays(GL_POLYGON, 238, 4);
	glDrawArrays(GL_POLYGON, 242, 4);
	glDrawArrays(GL_POLYGON, 246, 4);
	glDrawArrays(GL_POLYGON, 250, 5);
	glDrawArrays(GL_POLYGON, 255, 8);
	glDrawArrays(GL_POLYGON, 263, 3);
	glDrawArrays(GL_POLYGON, 266, 3);
	glDrawArrays(GL_POLYGON, 269, 4);
}

void glDrawArrays_logo(void) {
	setupInterleave_logo();

	glDrawArrays(GL_POLYGON, 0, 3);
	glDrawArrays(GL_POLYGON, 3, 4);
	glDrawArrays(GL_POLYGON, 7, 4);
	glDrawArrays(GL_POLYGON, 11, 4);
	glDrawArrays(GL_POLYGON, 15, 4);
	glDrawArrays(GL_POLYGON, 19, 4);
	glDrawArrays(GL_POLYGON, 23, 4);
	glDrawArrays(GL_POLYGON, 27, 14);
	glDrawArrays(GL_POLYGON, 41, 4);
	glDrawArrays(GL_POLYGON, 45, 4);
	glDrawArrays(GL_POLYGON, 49, 4);
	glDrawArrays(GL_POLYGON, 53, 4);
	glDrawArrays(GL_POLYGON, 57, 4);
	glDrawArrays(GL_POLYGON, 61, 4);
	glDrawArrays(GL_POLYGON, 65, 4);
	glDrawArrays(GL_POLYGON, 69, 4);
	glDrawArrays(GL_POLYGON, 73, 4);
	glDrawArrays(GL_POLYGON, 77, 4);
	glDrawArrays(GL_POLYGON, 81, 4);
	glDrawArrays(GL_POLYGON, 85, 4);
	glDrawArrays(GL_POLYGON, 89, 4);
	glDrawArrays(GL_POLYGON, 93, 4);
	glDrawArrays(GL_POLYGON, 97, 4);
	glDrawArrays(GL_POLYGON, 101, 4);
	glDrawArrays(GL_POLYGON, 105, 3);
	glDrawArrays(GL_POLYGON, 108, 4);
	
	glColor3f(1.0f, 0.0f, 0.0f);
		glDrawArrays(GL_POLYGON, 112, 20);
		glDrawArrays(GL_POLYGON, 132, 6);
		glDrawArrays(GL_POLYGON, 138, 4);
		glDrawArrays(GL_POLYGON, 142, 4);
		glDrawArrays(GL_POLYGON, 146, 6);
	glColor3f(0.29803f, 0.53725f, 0.63922f);
}

void glDrawArrays_National(void) {
	setupInterleave_National();

	glDrawArrays(GL_TRIANGLE_STRIP, 0, 5);
	glDrawArrays(GL_TRIANGLE_STRIP, 5, 4);
	glDrawArrays(GL_TRIANGLE_STRIP, 9, 5);
	glDrawArrays(GL_TRIANGLE_STRIP, 14, 17);
	glDrawArrays(GL_TRIANGLE_STRIP, 31, 19);
	glDrawArrays(GL_TRIANGLE_STRIP, 50, 8);
	glDrawArrays(GL_TRIANGLE_STRIP, 58, 4);
	glDrawArrays(GL_TRIANGLE_STRIP, 62, 4);
	glDrawArrays(GL_TRIANGLE_STRIP, 66, 4);
	glDrawArrays(GL_TRIANGLE_STRIP, 70, 31);
	glDrawArrays(GL_TRIANGLE_STRIP, 101, 4);
	glDrawArrays(GL_TRIANGLE_STRIP, 105, 11);
	glDrawArrays(GL_TRIANGLE_STRIP, 116, 17);
	glDrawArrays(GL_TRIANGLE_STRIP, 133, 19);
	glDrawArrays(GL_TRIANGLE_STRIP, 152, 4);
}

void glDrawArrays_Chung(void) {
	setupInterleave_Chung();

	glDrawArrays(GL_TRIANGLE_STRIP, 0, 31);
	glDrawArrays(GL_TRIANGLE_STRIP, 31, 4);
	glDrawArrays(GL_TRIANGLE_STRIP, 35, 11);
	glDrawArrays(GL_TRIANGLE_STRIP, 46, 15);
	glDrawArrays(GL_TRIANGLE_STRIP, 61, 4);
	glDrawArrays(GL_TRIANGLE_STRIP, 65, 4);
	glDrawArrays(GL_TRIANGLE_STRIP, 69, 11);
	glDrawArrays(GL_TRIANGLE_STRIP, 80, 25);
	glDrawArrays(GL_TRIANGLE_STRIP, 105, 16);
}

void glDrawArrays_Hsing(void) {
	setupInterleave_Hsing();

	glDrawArrays(GL_TRIANGLE_STRIP, 0, 4);
	glDrawArrays(GL_TRIANGLE_STRIP, 4, 4);
	glDrawArrays(GL_TRIANGLE_STRIP, 8, 4);
	glDrawArrays(GL_TRIANGLE_STRIP, 12, 36);
	glDrawArrays(GL_TRIANGLE_STRIP, 48, 4);
	glDrawArrays(GL_TRIANGLE_STRIP, 52, 4);
	glDrawArrays(GL_TRIANGLE_STRIP, 56, 4);
	glDrawArrays(GL_TRIANGLE_STRIP, 60, 11);
	glDrawArrays(GL_TRIANGLE_STRIP, 71, 25);
	glDrawArrays(GL_TRIANGLE_STRIP, 96, 16);
}

void glDrawArrays_University(void) {
	setupInterleave_University();

	glDrawArrays(GL_TRIANGLE_STRIP, 0, 18);
	glDrawArrays(GL_TRIANGLE_STRIP, 18, 4);
	glDrawArrays(GL_TRIANGLE_STRIP, 22, 11);
	glDrawArrays(GL_TRIANGLE_STRIP, 33, 4);
	glDrawArrays(GL_TRIANGLE_STRIP, 37, 4);
	glDrawArrays(GL_TRIANGLE_STRIP, 41, 7);
	glDrawArrays(GL_TRIANGLE_STRIP, 48, 36);
	glDrawArrays(GL_TRIANGLE_STRIP, 84, 4);
	glDrawArrays(GL_TRIANGLE_STRIP, 88, 8);
	glDrawArrays(GL_TRIANGLE_STRIP, 96, 36);
	glDrawArrays(GL_TRIANGLE_STRIP, 132, 4);
	glDrawArrays(GL_TRIANGLE_STRIP, 136, 4);
	glDrawArrays(GL_TRIANGLE_STRIP, 140, 8);
	glDrawArrays(GL_TRIANGLE_STRIP, 148, 4);
	glDrawArrays(GL_TRIANGLE_STRIP, 152, 4);
	glDrawArrays(GL_TRIANGLE_STRIP, 156, 13);
}

void glDrawElements_國(void) {
	setupInterleave_國();

	fill_in_indices(0, 10);
	glDrawElements(GL_POLYGON, 10, GL_UNSIGNED_INT, indices);
	fill_in_indices( 10, 8);
	glDrawElements(GL_POLYGON, 8, GL_UNSIGNED_INT, indices);
	fill_in_indices( 18, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices( 22, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices( 26, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices( 30, 5);
	glDrawElements(GL_POLYGON, 5, GL_UNSIGNED_INT, indices);
	fill_in_indices( 35, 7);
	glDrawElements(GL_POLYGON, 7, GL_UNSIGNED_INT, indices);
	fill_in_indices( 42, 6);
	glDrawElements(GL_POLYGON, 6, GL_UNSIGNED_INT, indices);
	fill_in_indices( 48, 5);
	glDrawElements(GL_POLYGON, 5, GL_UNSIGNED_INT, indices);
	fill_in_indices( 53, 3);
	glDrawElements(GL_POLYGON, 3, GL_UNSIGNED_INT, indices);
	fill_in_indices( 56, 7);
	glDrawElements(GL_POLYGON, 7, GL_UNSIGNED_INT, indices);
	fill_in_indices( 63, 5);
	glDrawElements(GL_POLYGON, 5, GL_UNSIGNED_INT, indices);
	fill_in_indices( 68, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices( 72, 7);
	glDrawElements(GL_POLYGON, 7, GL_UNSIGNED_INT, indices);
	fill_in_indices( 79, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices( 83, 3);
	glDrawElements(GL_POLYGON, 3, GL_UNSIGNED_INT, indices);
	fill_in_indices( 86, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices( 90, 3);
	glDrawElements(GL_POLYGON, 3, GL_UNSIGNED_INT, indices);
	fill_in_indices( 93, 6);
	glDrawElements(GL_POLYGON, 6, GL_UNSIGNED_INT, indices);
	fill_in_indices( 99, 3);
	glDrawElements(GL_POLYGON, 3, GL_UNSIGNED_INT, indices);
	fill_in_indices( 102, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices( 106, 3);
	glDrawElements(GL_POLYGON, 3, GL_UNSIGNED_INT, indices);
	fill_in_indices( 109, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices( 113, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices( 117, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices( 121, 9);
	glDrawElements(GL_POLYGON, 9, GL_UNSIGNED_INT, indices);
	fill_in_indices( 130, 3);
	glDrawElements(GL_POLYGON, 3, GL_UNSIGNED_INT, indices);
	fill_in_indices( 133, 3);
	glDrawElements(GL_POLYGON, 3, GL_UNSIGNED_INT, indices);
	fill_in_indices( 136, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices( 140, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices( 144, 3);
	glDrawElements(GL_POLYGON, 3, GL_UNSIGNED_INT, indices);
	fill_in_indices( 147, 5);
	glDrawElements(GL_POLYGON, 5, GL_UNSIGNED_INT, indices);
	fill_in_indices( 152, 3);
	glDrawElements(GL_POLYGON, 3, GL_UNSIGNED_INT, indices);
	fill_in_indices( 155, 5);
	glDrawElements(GL_POLYGON, 5, GL_UNSIGNED_INT, indices);
	fill_in_indices( 160, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices( 164, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices( 168, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices( 172, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices( 176, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices( 180, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices( 184, 5);
	glDrawElements(GL_POLYGON, 5, GL_UNSIGNED_INT, indices);
}

void glDrawElements_立(void) {
	setupInterleave_立();

	fill_in_indices(0, 3);
	glDrawElements(GL_POLYGON, 3, GL_UNSIGNED_INT, indices);
	fill_in_indices(3, 6);
	glDrawElements(GL_POLYGON, 6, GL_UNSIGNED_INT, indices);
	fill_in_indices(9, 6);
	glDrawElements(GL_POLYGON, 6, GL_UNSIGNED_INT, indices);
	fill_in_indices(15, 5);
	glDrawElements(GL_POLYGON, 5, GL_UNSIGNED_INT, indices);
	fill_in_indices(20, 3);
	glDrawElements(GL_POLYGON, 3, GL_UNSIGNED_INT, indices);
	fill_in_indices(23, 8);
	glDrawElements(GL_POLYGON, 8, GL_UNSIGNED_INT, indices);
	fill_in_indices(31, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(35, 5);
	glDrawElements(GL_POLYGON, 5, GL_UNSIGNED_INT, indices);
	fill_in_indices(40, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(44, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(48, 3);
	glDrawElements(GL_POLYGON, 3, GL_UNSIGNED_INT, indices);
	fill_in_indices(51, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(55, 7);
	glDrawElements(GL_POLYGON, 7, GL_UNSIGNED_INT, indices);
	fill_in_indices(62, 5);
	glDrawElements(GL_POLYGON, 5, GL_UNSIGNED_INT, indices);
	fill_in_indices(67, 7);
	glDrawElements(GL_POLYGON, 7, GL_UNSIGNED_INT, indices);
	fill_in_indices(74, 5);
	glDrawElements(GL_POLYGON, 5, GL_UNSIGNED_INT, indices);
	fill_in_indices(79, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(83, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(87, 8);
	glDrawElements(GL_POLYGON, 8, GL_UNSIGNED_INT, indices);
	fill_in_indices(95, 5);
	glDrawElements(GL_POLYGON, 5, GL_UNSIGNED_INT, indices);
	fill_in_indices(100, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(104, 7);
	glDrawElements(GL_POLYGON, 7, GL_UNSIGNED_INT, indices);
}

void glDrawElements_中(void) {
	setupInterleave_中();

	fill_in_indices(0, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(4, 6);
	glDrawElements(GL_POLYGON, 6, GL_UNSIGNED_INT, indices);
	fill_in_indices(10, 10);
	glDrawElements(GL_POLYGON, 10, GL_UNSIGNED_INT, indices);
	fill_in_indices(20, 5);
	glDrawElements(GL_POLYGON, 5, GL_UNSIGNED_INT, indices);
	fill_in_indices(25, 6);
	glDrawElements(GL_POLYGON, 6, GL_UNSIGNED_INT, indices);
	fill_in_indices(31, 7);
	glDrawElements(GL_POLYGON, 7, GL_UNSIGNED_INT, indices);
	fill_in_indices(38, 3);
	glDrawElements(GL_POLYGON, 3, GL_UNSIGNED_INT, indices);
	fill_in_indices(41, 6);
	glDrawElements(GL_POLYGON, 6, GL_UNSIGNED_INT, indices);
	fill_in_indices(47, 5);
	glDrawElements(GL_POLYGON, 5, GL_UNSIGNED_INT, indices);
	fill_in_indices(52, 7);
	glDrawElements(GL_POLYGON, 7, GL_UNSIGNED_INT, indices);
	fill_in_indices(59, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(63, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(67, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(71, 5);
	glDrawElements(GL_POLYGON, 5, GL_UNSIGNED_INT, indices);
	fill_in_indices(76, 5);
	glDrawElements(GL_POLYGON, 5, GL_UNSIGNED_INT, indices);
	fill_in_indices(81, 5);
	glDrawElements(GL_POLYGON, 5, GL_UNSIGNED_INT, indices);
}

void glDrawElements_興(void) {
	setupInterleave_興();

	fill_in_indices(0, 5);
	glDrawElements(GL_POLYGON, 5, GL_UNSIGNED_INT, indices);
	fill_in_indices(5, 6);
	glDrawElements(GL_POLYGON, 6, GL_UNSIGNED_INT, indices);
	fill_in_indices(11, 5);
	glDrawElements(GL_POLYGON, 5, GL_UNSIGNED_INT, indices);
	fill_in_indices(16, 6);
	glDrawElements(GL_POLYGON, 6, GL_UNSIGNED_INT, indices);
	fill_in_indices(22, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(26, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(30, 3);
	glDrawElements(GL_POLYGON, 3, GL_UNSIGNED_INT, indices);
	fill_in_indices(33, 6);
	glDrawElements(GL_POLYGON, 6, GL_UNSIGNED_INT, indices);
	fill_in_indices(39, 5);
	glDrawElements(GL_POLYGON, 5, GL_UNSIGNED_INT, indices);
	fill_in_indices(44, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(48, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(52, 5);
	glDrawElements(GL_POLYGON, 5, GL_UNSIGNED_INT, indices);
	fill_in_indices(57, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(61, 6);
	glDrawElements(GL_POLYGON, 6, GL_UNSIGNED_INT, indices);
	fill_in_indices(67, 5);
	glDrawElements(GL_POLYGON, 5, GL_UNSIGNED_INT, indices);
	fill_in_indices(72, 5);
	glDrawElements(GL_POLYGON, 5, GL_UNSIGNED_INT, indices);
	fill_in_indices(77, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(81, 5);
	glDrawElements(GL_POLYGON, 5, GL_UNSIGNED_INT, indices);
	fill_in_indices(86, 6);
	glDrawElements(GL_POLYGON, 6, GL_UNSIGNED_INT, indices);
	fill_in_indices(92, 5);
	glDrawElements(GL_POLYGON, 5, GL_UNSIGNED_INT, indices);
	fill_in_indices(97, 5);
	glDrawElements(GL_POLYGON, 5, GL_UNSIGNED_INT, indices);
	fill_in_indices(102, 5);
	glDrawElements(GL_POLYGON, 5, GL_UNSIGNED_INT, indices);
	fill_in_indices(107, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(111, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(115, 9);
	glDrawElements(GL_POLYGON, 9, GL_UNSIGNED_INT, indices);
	fill_in_indices(124, 6);
	glDrawElements(GL_POLYGON, 6, GL_UNSIGNED_INT, indices);
	fill_in_indices(130, 9);
	glDrawElements(GL_POLYGON, 9, GL_UNSIGNED_INT, indices);
	fill_in_indices(139, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(143, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(147, 6);
	glDrawElements(GL_POLYGON, 6, GL_UNSIGNED_INT, indices);
	fill_in_indices(153, 8);
	glDrawElements(GL_POLYGON, 8, GL_UNSIGNED_INT, indices);
	fill_in_indices(161, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(165, 8);
	glDrawElements(GL_POLYGON, 8, GL_UNSIGNED_INT, indices);
	fill_in_indices(173, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(177, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(181, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(185, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(189, 7);
	glDrawElements(GL_POLYGON, 7, GL_UNSIGNED_INT, indices);
	fill_in_indices(196, 6);
	glDrawElements(GL_POLYGON, 6, GL_UNSIGNED_INT, indices);
	fill_in_indices(202, 3);
	glDrawElements(GL_POLYGON, 3, GL_UNSIGNED_INT, indices);
	fill_in_indices(205, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(209, 5);
	glDrawElements(GL_POLYGON, 5, GL_UNSIGNED_INT, indices);
	fill_in_indices(214, 5);
	glDrawElements(GL_POLYGON, 5, GL_UNSIGNED_INT, indices);
	fill_in_indices(219, 6);
	glDrawElements(GL_POLYGON, 6, GL_UNSIGNED_INT, indices);
	fill_in_indices(225, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(229, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(233, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(237, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(241, 3);
	glDrawElements(GL_POLYGON, 3, GL_UNSIGNED_INT, indices);
	fill_in_indices(244, 6);
	glDrawElements(GL_POLYGON, 6, GL_UNSIGNED_INT, indices);
	fill_in_indices(250, 3);
	glDrawElements(GL_POLYGON, 3, GL_UNSIGNED_INT, indices);
}

void glDrawElements_大(void) {
	setupInterleave_大();

	fill_in_indices(0, 8);
	glDrawElements(GL_POLYGON, 8, GL_UNSIGNED_INT, indices);
	fill_in_indices(8, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(12, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(16, 5);
	glDrawElements(GL_POLYGON, 5, GL_UNSIGNED_INT, indices);
	fill_in_indices(21, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(25, 5);
	glDrawElements(GL_POLYGON, 5, GL_UNSIGNED_INT, indices);
	fill_in_indices(30, 6);
	glDrawElements(GL_POLYGON, 6, GL_UNSIGNED_INT, indices);
	fill_in_indices(36, 5);
	glDrawElements(GL_POLYGON, 5, GL_UNSIGNED_INT, indices);
	fill_in_indices(41, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(45, 5);
	glDrawElements(GL_POLYGON, 5, GL_UNSIGNED_INT, indices);
	fill_in_indices(50, 6);
	glDrawElements(GL_POLYGON, 6, GL_UNSIGNED_INT, indices);
	fill_in_indices(56, 6);
	glDrawElements(GL_POLYGON, 6, GL_UNSIGNED_INT, indices);
	fill_in_indices(62, 5);
	glDrawElements(GL_POLYGON, 5, GL_UNSIGNED_INT, indices);
	fill_in_indices(67, 5);
	glDrawElements(GL_POLYGON, 5, GL_UNSIGNED_INT, indices);
	fill_in_indices(72, 5);
	glDrawElements(GL_POLYGON, 5, GL_UNSIGNED_INT, indices);
	fill_in_indices(77, 5);
	glDrawElements(GL_POLYGON, 5, GL_UNSIGNED_INT, indices);
	fill_in_indices(82, 5);
	glDrawElements(GL_POLYGON, 5, GL_UNSIGNED_INT, indices);
	fill_in_indices(87, 5);
	glDrawElements(GL_POLYGON, 5, GL_UNSIGNED_INT, indices);
	fill_in_indices(92, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(96, 5);
	glDrawElements(GL_POLYGON, 5, GL_UNSIGNED_INT, indices);
}

void glDrawElements_學(void) {
	setupInterleave_學();

	fill_in_indices(0, 5);
	glDrawElements(GL_POLYGON, 5, GL_UNSIGNED_INT, indices);
	fill_in_indices(5, 8);
	glDrawElements(GL_POLYGON, 8, GL_UNSIGNED_INT, indices);
	fill_in_indices(13, 5);
	glDrawElements(GL_POLYGON, 5, GL_UNSIGNED_INT, indices);
	fill_in_indices(18, 7);
	glDrawElements(GL_POLYGON, 7, GL_UNSIGNED_INT, indices);
	fill_in_indices(25, 8);
	glDrawElements(GL_POLYGON, 8, GL_UNSIGNED_INT, indices);
	fill_in_indices(33, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(37, 3);
	glDrawElements(GL_POLYGON, 3, GL_UNSIGNED_INT, indices);
	fill_in_indices(40, 3);
	glDrawElements(GL_POLYGON, 3, GL_UNSIGNED_INT, indices);
	fill_in_indices(43, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(47, 8);
	glDrawElements(GL_POLYGON, 8, GL_UNSIGNED_INT, indices);
	fill_in_indices(55, 3);
	glDrawElements(GL_POLYGON, 3, GL_UNSIGNED_INT, indices);
	fill_in_indices(58, 3);
	glDrawElements(GL_POLYGON, 3, GL_UNSIGNED_INT, indices);
	fill_in_indices(61, 6);
	glDrawElements(GL_POLYGON, 6, GL_UNSIGNED_INT, indices);
	fill_in_indices(67, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(71, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(75, 7);
	glDrawElements(GL_POLYGON, 7, GL_UNSIGNED_INT, indices);
	fill_in_indices(82, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(86, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(90, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(94, 6);
	glDrawElements(GL_POLYGON, 6, GL_UNSIGNED_INT, indices);
	fill_in_indices(100, 7);
	glDrawElements(GL_POLYGON, 7, GL_UNSIGNED_INT, indices);
	fill_in_indices(107, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(111, 6);
	glDrawElements(GL_POLYGON, 6, GL_UNSIGNED_INT, indices);
	fill_in_indices(117, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(121, 5);
	glDrawElements(GL_POLYGON, 5, GL_UNSIGNED_INT, indices);
	fill_in_indices(126, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(130, 5);
	glDrawElements(GL_POLYGON, 5, GL_UNSIGNED_INT, indices);
	fill_in_indices(135, 7);
	glDrawElements(GL_POLYGON, 7, GL_UNSIGNED_INT, indices);
	fill_in_indices(142, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(146, 8);
	glDrawElements(GL_POLYGON, 8, GL_UNSIGNED_INT, indices);
	fill_in_indices(154, 3);
	glDrawElements(GL_POLYGON, 3, GL_UNSIGNED_INT, indices);
	fill_in_indices(157, 5);
	glDrawElements(GL_POLYGON, 5, GL_UNSIGNED_INT, indices);
	fill_in_indices(162, 8);
	glDrawElements(GL_POLYGON, 8, GL_UNSIGNED_INT, indices);
	fill_in_indices(170, 3);
	glDrawElements(GL_POLYGON, 3, GL_UNSIGNED_INT, indices);
	fill_in_indices(173, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(177, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(181, 3);
	glDrawElements(GL_POLYGON, 3, GL_UNSIGNED_INT, indices);
	fill_in_indices(184, 3);
	glDrawElements(GL_POLYGON, 3, GL_UNSIGNED_INT, indices);
	fill_in_indices(187, 5);
	glDrawElements(GL_POLYGON, 5, GL_UNSIGNED_INT, indices);
	fill_in_indices(192, 5);
	glDrawElements(GL_POLYGON, 5, GL_UNSIGNED_INT, indices);
	fill_in_indices(197, 6);
	glDrawElements(GL_POLYGON, 6, GL_UNSIGNED_INT, indices);
	fill_in_indices(203, 10);
	glDrawElements(GL_POLYGON, 10, GL_UNSIGNED_INT, indices);
	fill_in_indices(213, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(217, 5);
	glDrawElements(GL_POLYGON, 5, GL_UNSIGNED_INT, indices);
	fill_in_indices(222, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(226, 3);
	glDrawElements(GL_POLYGON, 3, GL_UNSIGNED_INT, indices);
	fill_in_indices(229, 5);
	glDrawElements(GL_POLYGON, 5, GL_UNSIGNED_INT, indices);
	fill_in_indices(234, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(238, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(242, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(246, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(250, 5);
	glDrawElements(GL_POLYGON, 5, GL_UNSIGNED_INT, indices);
	fill_in_indices(255, 8);
	glDrawElements(GL_POLYGON, 8, GL_UNSIGNED_INT, indices);
	fill_in_indices(263, 3);
	glDrawElements(GL_POLYGON, 3, GL_UNSIGNED_INT, indices);
	fill_in_indices(266, 3);
	glDrawElements(GL_POLYGON, 3, GL_UNSIGNED_INT, indices);
	fill_in_indices(269, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
}

void glDrawElements_logo(void) {
	setupInterleave_logo();

	fill_in_indices(0, 3);
	glDrawElements(GL_POLYGON, 3, GL_UNSIGNED_INT, indices);
	fill_in_indices(3, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(7, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(11, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(15, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(19, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(23, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(27, 14);
	glDrawElements(GL_POLYGON, 14, GL_UNSIGNED_INT, indices);
	fill_in_indices(41, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(45, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(49, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(53, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(57, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(61, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(65, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(69, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(73, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(77, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(81, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(85, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(89, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(93, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(97, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(101, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(105, 3);
	glDrawElements(GL_POLYGON, 3, GL_UNSIGNED_INT, indices);
	fill_in_indices(108, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);

	glColor3f(1.0f, 0.0f, 0.0f);

	fill_in_indices(112, 20);
	glDrawElements(GL_POLYGON, 20, GL_UNSIGNED_INT, indices);
	fill_in_indices(132, 6);
	glDrawElements(GL_POLYGON, 6, GL_UNSIGNED_INT, indices);
	fill_in_indices(138, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(142, 4);
	glDrawElements(GL_POLYGON, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(146, 6);
	glDrawElements(GL_POLYGON, 6, GL_UNSIGNED_INT, indices);

	glColor3f(0.29803f, 0.53725f, 0.63922f);
}

void glDrawElements_National(void) {
	setupInterleave_National();

	fill_in_indices(0, 5);
	glDrawElements(GL_TRIANGLE_STRIP, 5, GL_UNSIGNED_INT, indices);
	fill_in_indices(5, 4);
	glDrawElements(GL_TRIANGLE_STRIP, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(9, 5);
	glDrawElements(GL_TRIANGLE_STRIP, 5, GL_UNSIGNED_INT, indices);
	fill_in_indices(14, 17);
	glDrawElements(GL_TRIANGLE_STRIP, 17, GL_UNSIGNED_INT, indices);
	fill_in_indices(31, 19);
	glDrawElements(GL_TRIANGLE_STRIP, 19, GL_UNSIGNED_INT, indices);
	fill_in_indices(50, 8);
	glDrawElements(GL_TRIANGLE_STRIP, 8, GL_UNSIGNED_INT, indices);
	fill_in_indices(58, 4);
	glDrawElements(GL_TRIANGLE_STRIP, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(62, 4);
	glDrawElements(GL_TRIANGLE_STRIP, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(66, 4);
	glDrawElements(GL_TRIANGLE_STRIP, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(70, 31);
	glDrawElements(GL_TRIANGLE_STRIP, 31, GL_UNSIGNED_INT, indices);
	fill_in_indices(101, 4);
	glDrawElements(GL_TRIANGLE_STRIP, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(105, 11);
	glDrawElements(GL_TRIANGLE_STRIP, 11, GL_UNSIGNED_INT, indices);
	fill_in_indices(116, 17);
	glDrawElements(GL_TRIANGLE_STRIP, 17, GL_UNSIGNED_INT, indices);
	fill_in_indices(133, 19);
	glDrawElements(GL_TRIANGLE_STRIP, 19, GL_UNSIGNED_INT, indices);
	fill_in_indices(152, 4);
	glDrawElements(GL_TRIANGLE_STRIP, 4, GL_UNSIGNED_INT, indices);
}

void glDrawElements_Chung(void) {
	setupInterleave_Chung();

	fill_in_indices(0, 31);
	glDrawElements(GL_TRIANGLE_STRIP, 31, GL_UNSIGNED_INT, indices);
	fill_in_indices(31, 4);
	glDrawElements(GL_TRIANGLE_STRIP, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(35, 11);
	glDrawElements(GL_TRIANGLE_STRIP, 11, GL_UNSIGNED_INT, indices);
	fill_in_indices(46, 15);
	glDrawElements(GL_TRIANGLE_STRIP, 15, GL_UNSIGNED_INT, indices);
	fill_in_indices(61, 4);
	glDrawElements(GL_TRIANGLE_STRIP, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(65, 4);
	glDrawElements(GL_TRIANGLE_STRIP, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(69, 11);
	glDrawElements(GL_TRIANGLE_STRIP, 11, GL_UNSIGNED_INT, indices);
	fill_in_indices(80, 25);
	glDrawElements(GL_TRIANGLE_STRIP, 25, GL_UNSIGNED_INT, indices);
	fill_in_indices(105, 16);
	glDrawElements(GL_TRIANGLE_STRIP, 16, GL_UNSIGNED_INT, indices);
}

void glDrawElements_Hsing(void) {
	setupInterleave_Hsing();

	fill_in_indices(0, 4);
	glDrawElements(GL_TRIANGLE_STRIP, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(4, 4);
	glDrawElements(GL_TRIANGLE_STRIP, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(8, 4);
	glDrawElements(GL_TRIANGLE_STRIP, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(12, 36);
	glDrawElements(GL_TRIANGLE_STRIP, 36, GL_UNSIGNED_INT, indices);
	fill_in_indices(48, 4);
	glDrawElements(GL_TRIANGLE_STRIP, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(52, 4);
	glDrawElements(GL_TRIANGLE_STRIP, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(56, 4);
	glDrawElements(GL_TRIANGLE_STRIP, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(60, 11);
	glDrawElements(GL_TRIANGLE_STRIP, 11, GL_UNSIGNED_INT, indices);
	fill_in_indices(71, 25);
	glDrawElements(GL_TRIANGLE_STRIP, 25, GL_UNSIGNED_INT, indices);
	fill_in_indices(96, 16);
	glDrawElements(GL_TRIANGLE_STRIP, 16, GL_UNSIGNED_INT, indices);
}

void glDrawElements_University(void) {
	setupInterleave_University();

	fill_in_indices(0, 18);
	glDrawElements(GL_TRIANGLE_STRIP, 18, GL_UNSIGNED_INT, indices);
	fill_in_indices(18, 4);
	glDrawElements(GL_TRIANGLE_STRIP, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(22, 11);
	glDrawElements(GL_TRIANGLE_STRIP, 11, GL_UNSIGNED_INT, indices);
	fill_in_indices(33, 4);
	glDrawElements(GL_TRIANGLE_STRIP, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(37, 4);
	glDrawElements(GL_TRIANGLE_STRIP, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(41, 7);
	glDrawElements(GL_TRIANGLE_STRIP, 7, GL_UNSIGNED_INT, indices);
	fill_in_indices(48, 36);
	glDrawElements(GL_TRIANGLE_STRIP, 36, GL_UNSIGNED_INT, indices);
	fill_in_indices(84, 4);
	glDrawElements(GL_TRIANGLE_STRIP, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(88, 8);
	glDrawElements(GL_TRIANGLE_STRIP, 8, GL_UNSIGNED_INT, indices);
	fill_in_indices(96, 36);
	glDrawElements(GL_TRIANGLE_STRIP, 36, GL_UNSIGNED_INT, indices);
	fill_in_indices(132, 4);
	glDrawElements(GL_TRIANGLE_STRIP, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(136, 4);
	glDrawElements(GL_TRIANGLE_STRIP, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(140, 8);
	glDrawElements(GL_TRIANGLE_STRIP, 8, GL_UNSIGNED_INT, indices);
	fill_in_indices(148, 4);
	glDrawElements(GL_TRIANGLE_STRIP, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(152, 4);
	glDrawElements(GL_TRIANGLE_STRIP, 4, GL_UNSIGNED_INT, indices);
	fill_in_indices(156, 13);
	glDrawElements(GL_TRIANGLE_STRIP, 13, GL_UNSIGNED_INT, indices);
}

void glMultiDrawArrays_國(void) {
	setupInterleave_國();

	GLint first[] = {
		0,
		10,
		18,
		22,
		26,
		30,
		35,
		42,
		48,
		53,
		56,
		63,
		68,
		72,
		79,
		83,
		86,
		90,
		93,
		99,
		102,
		106,
		109,
		113,
		117,
		121,
		130,
		133,
		136,
		140,
		144,
		147,
		152,
		155,
		160,
		164,
		168,
		172,
		176,
		180,
		184,

	};
	GLint count[] = {
		10,
		8,
		4,
		4,
		4,
		5,
		7,
		6,
		5,
		3,
		7,
		5,
		4,
		7,
		4,
		3,
		4,
		3,
		6,
		3,
		4,
		3,
		4,
		4,
		4,
		9,
		3,
		3,
		4,
		4,
		3,
		5,
		3,
		5,
		4,
		4,
		4,
		4,
		4,
		4,
		5
	};

	glMultiDrawArrays(GL_POLYGON, first, count, 41);
}

void glMultiDrawArrays_立(void) {
	setupInterleave_立();

	GLint first[] = {
		0,
		3,
		9,
		15,
		20,
		23,
		31,
		35,
		40,
		44,
		48,
		51,
		55,
		62,
		67,
		74,
		79,
		83,
		87,
		95,
		100,
		104,
	};
	GLint count[] = {
		3,
		6,
		6,
		5,
		3,
		8,
		4,
		5,
		4,
		4,
		3,
		4,
		7,
		5,
		7,
		5,
		4,
		4,
		8,
		5,
		4,
		7,
	};
	
	glMultiDrawArrays(GL_POLYGON, first, count, 22);
}

void glMultiDrawArrays_中(void) {
	setupInterleave_中();

	GLint first[] = {
		0,
		4,
		10,
		20,
		25,
		31,
		38,
		41,
		47,
		52,
		59,
		63,
		67,
		71,
		76,
		81
	};
	GLint count[] = {
		4,
		6,
		10,
		5,
		6,
		7,
		3,
		6,
		5,
		7,
		4,
		4,
		4,
		5,
		5,
		5
	};
	glMultiDrawArrays(GL_POLYGON, first, count, 16);
}

void glMultiDrawArrays_興(void) {
	setupInterleave_興();

	GLint first[] = {
		0,
		5,
		11,
		16,
		22,
		26,
		30,
		33,
		39,
		44,
		48,
		52,
		57,
		61,
		67,
		72,
		77,
		81,
		86,
		92,
		97,
		102,
		107,
		111,
		115,
		124,
		130,
		139,
		143,
		147,
		153,
		161,
		165,
		173,
		177,
		181,
		185,
		189,
		196,
		202,
		205,
		209,
		214,
		219,
		225,
		229,
		233,
		237,
		241,
		244,
		250,
	};
	GLint count[] = {
		5,
		6,
		5,
		6,
		4,
		4,
		3,
		6,
		5,
		4,
		4,
		5,
		4,
		6,
		5,
		5,
		4,
		5,
		6,
		5,
		5,
		5,
		4,
		4,
		9,
		6,
		9,
		4,
		4,
		6,
		8,
		4,
		8,
		4,
		4,
		4,
		4,
		7,
		6,
		3,
		4,
		5,
		5,
		6,
		4,
		4,
		4,
		4,
		3,
		6,
		3,
	};

	glMultiDrawArrays(GL_POLYGON, first, count, 51);

}

void glMultiDrawArrays_大(void) {
	setupInterleave_大();

	GLint first[] = {
		0,
		8,
		12,
		16,
		21,
		25,
		30,
		36,
		41,
		45,
		50,
		56,
		62,
		67,
		72,
		77,
		82,
		87,
		92,
		96,
	};
	GLint count[] = {
		8,
		4,
		4,
		5,
		4,
		5,
		6,
		5,
		4,
		5,
		6,
		6,
		5,
		5,
		5,
		5,
		5,
		5,
		4,
		5,
	};

	glMultiDrawArrays(GL_POLYGON, first, count, 20);
}

void glMultiDrawArrays_學(void) {
	setupInterleave_學();

	GLint count[] = {
		5,
		8,
		5,
		7,
		8,
		4,
		3,
		3,
		4,
		8,
		3,
		3,
		6,
		4,
		4,
		7,
		4,
		4,
		4,
		6,
		7,
		4,
		6,
		4,
		5,
		4,
		5,
		7,
		4,
		8,
		3,
		5,
		8,
		3,
		4,
		4,
		3,
		3,
		5,
		5,
		6,
		10,
		4,
		5,
		4,
		3,
		5,
		4,
		4,
		4,
		4,
		5,
		8,
		3,
		3,
		4,
	};
	GLint first[] = {
		0, 	
		5, 	
		13, 	
		18, 	
		25, 	
		33, 	
		37, 	
		40, 	
		43, 	
		47, 	
		55, 	
		58, 	
		61, 	
		67, 	
		71, 	
		75, 	
		82, 	
		86, 	
		90, 	
		94, 	
		100, 	
		107, 	
		111, 	
		117, 	
		121, 	
		126, 	
		130, 	
		135, 	
		142, 	
		146, 	
		154, 	
		157, 	
		162, 	
		170, 	
		173, 	
		177, 	
		181, 	
		184, 	
		187, 	
		192, 	
		197, 	
		203,
		213, 	
		217, 	
		222, 	
		226, 	
		229, 	
		234, 	
		238, 	
		242, 	
		246, 	
		250, 	
		255, 	
		263, 	
		266, 	
		269,
	};

	glMultiDrawArrays(GL_POLYGON, first, count, 56);
}

void glMultiDrawArrays_logo(void) {
	setupInterleave_logo();

	GLint first[] = {
		0,
		3,
		7,
		11,
		15,
		19,
		23,
		27,
		41,
		45,
		49,
		53,
		57,
		61,
		65,
		69,
		73,
		77,
		81,
		85,
		89,
		93,
		97,
		101,
		105,
		108,
		
	};
	GLint count[] = {
		3,
		4,
		4,
		4,
		4,
		4,
		4,
		14,
		4,
		4,
		4,
		4,
		4,
		4,
		4,
		4,
		4,
		4,
		4,
		4,
		4,
		4,
		4,
		4,
		3,
		4,
	};
	glMultiDrawArrays(GL_POLYGON, first, count, 26);

	glColor3f(1.0f, 0.0f, 0.0f);
	GLint first2[] = {
		112,
		132,
		138,
		142,
		146,
	};
	GLint count2[] = {
		20,
		6,
		4,
		4,
		6,
	};
	glMultiDrawArrays(GL_POLYGON, first2, count2, 5);
	glColor3f(0.29803f, 0.53725f, 0.63922f);
}

void glMultiDrawArrays_National(void) {
	setupInterleave_National();

	GLint first[] = {
		0,
		5,
		9,
		14,
		31,
		50,
		58,
		62,
		66,
		70,
		101,
		105,
		116,
		133,
		152,
	};
	GLint count[] = {
		5,
		4,
		5,
		17,
		19,
		8,
		4,
		4,
		4,
		31,
		4,
		11,
		17,
		19,
		4,
	};

	glMultiDrawArrays(GL_TRIANGLE_STRIP, first, count, 16);
}

void glMultiDrawArrays_Chung(void) {
	setupInterleave_Chung();

	GLint first[] = {
		0,
		31,
		35,
		46,
		61,
		65,
		69,
		80,
		105,
	};

	GLint count[] = {
		31,
		4,
		11,
		15,
		4,
		4,
		11,
		25,
		16,
	};

	glMultiDrawArrays(GL_TRIANGLE_STRIP, first, count, 9);
}

void glMultiDrawArrays_Hsing(void) {
	setupInterleave_Hsing();

	GLint first[] = {
		0,
		4,
		8,
		12,
		48,
		52,
		56,
		60,
		71,
		96,
	};

	GLint count[] = {
		4,
		4,
		4,
		36,
		4,
		4,
		4,
		11,
		25,
		16,
	};

	glMultiDrawArrays(GL_TRIANGLE_STRIP, first, count, 10);
}

void glMultiDrawArrays_University(void) {
	setupInterleave_University();

	GLint first[] = {
		0,
		18,
		22,
		33,
		37,
		41,
		48,
		84,
		88,
		96,
		132,
		136,
		140,
		148,
		152,
		156,
	};
	GLint count[] = {
		18,
		4,
		11,
		4,
		4,
		7,
		36,
		4,
		8,
		36,
		4,
		4,
		8,
		4,
		4,
		13,
	};

	glMultiDrawArrays(GL_TRIANGLE_STRIP, first, count, 16);
}

void glMultiDrawElements_國(void){
	setupInterleave_國();
	GLuint indices1[41][50];
	
	fill_in_multi_indices(indices1[0], 0, 10);
	fill_in_multi_indices(indices1[1], 10, 8);
	fill_in_multi_indices(indices1[2], 18, 4);
	fill_in_multi_indices(indices1[3], 22, 4);
	fill_in_multi_indices(indices1[4], 26, 4);
	fill_in_multi_indices(indices1[5], 30, 5);
	fill_in_multi_indices(indices1[6], 35, 7);
	fill_in_multi_indices(indices1[7], 42, 6);
	fill_in_multi_indices(indices1[8], 48, 5);
	fill_in_multi_indices(indices1[9], 53, 3);
	fill_in_multi_indices(indices1[10], 56, 7);
	fill_in_multi_indices(indices1[11], 63, 5);
	fill_in_multi_indices(indices1[12], 68, 4);
	fill_in_multi_indices(indices1[13], 72, 7);
	fill_in_multi_indices(indices1[14], 79, 4);
	fill_in_multi_indices(indices1[15], 83, 3);
	fill_in_multi_indices(indices1[16], 86, 4);
	fill_in_multi_indices(indices1[17], 90, 3);
	fill_in_multi_indices(indices1[18], 93, 6);
	fill_in_multi_indices(indices1[19], 99, 3);
	fill_in_multi_indices(indices1[20], 102, 4);
	fill_in_multi_indices(indices1[21], 106, 3);
	fill_in_multi_indices(indices1[22], 109, 4);
	fill_in_multi_indices(indices1[23], 113, 4);
	fill_in_multi_indices(indices1[24], 117, 4);
	fill_in_multi_indices(indices1[25], 121, 9);
	fill_in_multi_indices(indices1[26], 130, 3);
	fill_in_multi_indices(indices1[27], 133, 3);
	fill_in_multi_indices(indices1[28], 136, 4);
	fill_in_multi_indices(indices1[29], 140, 4);
	fill_in_multi_indices(indices1[30], 144, 3);
	fill_in_multi_indices(indices1[31], 147, 5);
	fill_in_multi_indices(indices1[32], 152, 3);
	fill_in_multi_indices(indices1[33], 155, 5);
	fill_in_multi_indices(indices1[34], 160, 4);
	fill_in_multi_indices(indices1[35], 164, 4);
	fill_in_multi_indices(indices1[36], 168, 4);
	fill_in_multi_indices(indices1[37], 172, 4);
	fill_in_multi_indices(indices1[38], 176, 4);
	fill_in_multi_indices(indices1[39], 180, 4);
	fill_in_multi_indices(indices1[40], 184, 5);

	GLvoid* indices_total[41];
	for (int i = 0; i < 41; i++) {
		indices_total[i] = indices1[i];
	}
	GLint count[] = {
		10,
		8,
		4,
		4,
		4,
		5,
		7,
		6,
		5,
		3,
		7,
		5,
		4,
		7,
		4,
		3,
		4,
		3,
		6,
		3,
		4,
		3,
		4,
		4,
		4,
		9,
		3,
		3,
		4,
		4,
		3,
		5,
		3,
		5,
		4,
		4,
		4,
		4,
		4,
		4,
		5
	};

	glMultiDrawElements(GL_POLYGON, count, GL_UNSIGNED_INT, indices_total, 41);
}

void glMultiDrawElements_立(void) {
	setupInterleave_立();
	GLuint indices1[22][50];

	fill_in_multi_indices(indices1[0], 0, 3);
	fill_in_multi_indices(indices1[1], 3, 6);
	fill_in_multi_indices(indices1[2], 9, 6);
	fill_in_multi_indices(indices1[3], 15, 5);
	fill_in_multi_indices(indices1[4], 20, 3);
	fill_in_multi_indices(indices1[5], 23, 8);
	fill_in_multi_indices(indices1[6], 31, 4);
	fill_in_multi_indices(indices1[7], 35, 5);
	fill_in_multi_indices(indices1[8], 40, 4);
	fill_in_multi_indices(indices1[9], 44, 4);
	fill_in_multi_indices(indices1[10], 48, 3);
	fill_in_multi_indices(indices1[11], 51, 4);
	fill_in_multi_indices(indices1[12], 55, 7);
	fill_in_multi_indices(indices1[13], 62, 5);
	fill_in_multi_indices(indices1[14], 67, 7);
	fill_in_multi_indices(indices1[15], 74, 5);
	fill_in_multi_indices(indices1[16], 79, 4);
	fill_in_multi_indices(indices1[17], 83, 4);
	fill_in_multi_indices(indices1[18], 87, 8);
	fill_in_multi_indices(indices1[19], 95, 5);
	fill_in_multi_indices(indices1[20], 100, 4);
	fill_in_multi_indices(indices1[21], 104, 7);

	GLvoid* indices_total[22];
	for (int i = 0; i < 22; i++) {
		indices_total[i] = indices1[i];
	}

	GLint count[] = {
		3,
		6,
		6,
		5,
		3,
		8,
		4,
		5,
		4,
		4,
		3,
		4,
		7,
		5,
		7,
		5,
		4,
		4,
		8,
		5,
		4,
		7,
	};
	glMultiDrawElements(GL_POLYGON, count, GL_UNSIGNED_INT, indices_total, 22);
}

void glMultiDrawElements_中(void) {
	setupInterleave_中();
	GLuint indices1[16][50];

	fill_in_multi_indices(indices1[0], 0, 4);
	fill_in_multi_indices(indices1[1], 4, 6);
	fill_in_multi_indices(indices1[2], 10, 10);
	fill_in_multi_indices(indices1[3], 20, 5);
	fill_in_multi_indices(indices1[4], 25, 6);
	fill_in_multi_indices(indices1[5], 31, 7);
	fill_in_multi_indices(indices1[6], 38, 3);
	fill_in_multi_indices(indices1[7], 41, 6);
	fill_in_multi_indices(indices1[8], 47, 5);
	fill_in_multi_indices(indices1[9], 52, 7);
	fill_in_multi_indices(indices1[10], 59, 4);
	fill_in_multi_indices(indices1[11], 63, 4);
	fill_in_multi_indices(indices1[12], 67, 4);
	fill_in_multi_indices(indices1[13], 71, 5);
	fill_in_multi_indices(indices1[14], 76, 5);
	fill_in_multi_indices(indices1[15], 81, 5);

	GLvoid* indices_total[16];
	for (int i = 0; i < 16; i++) {
		indices_total[i] = indices1[i];
	}

	GLint count[] = {
		4,
		6,
		10,
		5,
		6,
		7,
		3,
		6,
		5,
		7,
		4,
		4,
		4,
		5,
		5,
		5
	};
	glMultiDrawElements(GL_POLYGON, count, GL_UNSIGNED_INT, indices_total, 16);
}

void glMultiDrawElements_興(void) {
	setupInterleave_興();
	GLuint indices1[51][50];

	fill_in_multi_indices(indices1[0], 0, 5);
	fill_in_multi_indices(indices1[1], 5, 6);
	fill_in_multi_indices(indices1[2], 11, 5);
	fill_in_multi_indices(indices1[3], 16, 6);
	fill_in_multi_indices(indices1[4], 22, 4);
	fill_in_multi_indices(indices1[5], 26, 4);
	fill_in_multi_indices(indices1[6], 30, 3);
	fill_in_multi_indices(indices1[7], 33, 6);
	fill_in_multi_indices(indices1[8], 39, 5);
	fill_in_multi_indices(indices1[9], 44, 4);
	fill_in_multi_indices(indices1[10], 48, 4);
	fill_in_multi_indices(indices1[11], 52, 5);
	fill_in_multi_indices(indices1[12], 57, 4);
	fill_in_multi_indices(indices1[13], 61, 6);
	fill_in_multi_indices(indices1[14], 67, 5);
	fill_in_multi_indices(indices1[15], 72, 5);
	fill_in_multi_indices(indices1[16], 77, 4);
	fill_in_multi_indices(indices1[17], 81, 5);
	fill_in_multi_indices(indices1[18], 86, 6);
	fill_in_multi_indices(indices1[19], 92, 5);
	fill_in_multi_indices(indices1[20], 97, 5);
	fill_in_multi_indices(indices1[21], 102, 5);
	fill_in_multi_indices(indices1[22], 107, 4);
	fill_in_multi_indices(indices1[23], 111, 4);
	fill_in_multi_indices(indices1[24], 115, 9);
	fill_in_multi_indices(indices1[25], 124, 6);
	fill_in_multi_indices(indices1[26], 130, 9);
	fill_in_multi_indices(indices1[27], 139, 4);
	fill_in_multi_indices(indices1[28], 143, 4);
	fill_in_multi_indices(indices1[29], 147, 6);
	fill_in_multi_indices(indices1[30], 153, 8);
	fill_in_multi_indices(indices1[31], 161, 4);
	fill_in_multi_indices(indices1[32], 165, 8);
	fill_in_multi_indices(indices1[33], 173, 4);
	fill_in_multi_indices(indices1[34], 177, 4);
	fill_in_multi_indices(indices1[35], 181, 4);
	fill_in_multi_indices(indices1[36], 185, 4);
	fill_in_multi_indices(indices1[37], 189, 7);
	fill_in_multi_indices(indices1[38], 196, 6);
	fill_in_multi_indices(indices1[39], 202, 3);
	fill_in_multi_indices(indices1[40], 205, 4);
	fill_in_multi_indices(indices1[41], 209, 5);
	fill_in_multi_indices(indices1[42], 214, 5);
	fill_in_multi_indices(indices1[43], 219, 6);
	fill_in_multi_indices(indices1[44], 225, 4);
	fill_in_multi_indices(indices1[45], 229, 4);
	fill_in_multi_indices(indices1[46], 233, 4);
	fill_in_multi_indices(indices1[47], 237, 4);
	fill_in_multi_indices(indices1[48], 241, 3);
	fill_in_multi_indices(indices1[49], 244, 6);
	fill_in_multi_indices(indices1[50], 250, 3);

	GLvoid* indices_total[51];
	for (int i = 0; i < 51; i++) {
		indices_total[i] = indices1[i];
	}

	GLint count[] = {
		5,
		6,
		5,
		6,
		4,
		4,
		3,
		6,
		5,
		4,
		4,
		5,
		4,
		6,
		5,
		5,
		4,
		5,
		6,
		5,
		5,
		5,
		4,
		4,
		9,
		6,
		9,
		4,
		4,
		6,
		8,
		4,
		8,
		4,
		4,
		4,
		4,
		7,
		6,
		3,
		4,
		5,
		5,
		6,
		4,
		4,
		4,
		4,
		3,
		6,
		3,
	};
	glMultiDrawElements(GL_POLYGON, count, GL_UNSIGNED_INT, indices_total, 51);
}

void glMultiDrawElements_大(void) {
	setupInterleave_大();
	GLuint indices1[20][50];

	fill_in_multi_indices(indices1[0], 0, 8);
	fill_in_multi_indices(indices1[1], 8, 4);
	fill_in_multi_indices(indices1[2], 12, 4);
	fill_in_multi_indices(indices1[3], 16, 5);
	fill_in_multi_indices(indices1[4], 21, 4);
	fill_in_multi_indices(indices1[5], 25, 5);
	fill_in_multi_indices(indices1[6], 30, 6);
	fill_in_multi_indices(indices1[7], 36, 5);
	fill_in_multi_indices(indices1[8], 41, 4);
	fill_in_multi_indices(indices1[9], 45, 5);
	fill_in_multi_indices(indices1[10], 50, 6);
	fill_in_multi_indices(indices1[11], 56, 6);
	fill_in_multi_indices(indices1[12], 62, 5);
	fill_in_multi_indices(indices1[13], 67, 5);
	fill_in_multi_indices(indices1[14], 72, 5);
	fill_in_multi_indices(indices1[15], 77, 5);
	fill_in_multi_indices(indices1[16], 82, 5);
	fill_in_multi_indices(indices1[17], 87, 5);
	fill_in_multi_indices(indices1[18], 92, 4);
	fill_in_multi_indices(indices1[19], 96, 5);

	GLvoid* indices_total[20];
	for (int i = 0; i < 20; i++) {
		indices_total[i] = indices1[i];
	}

	GLint count[] = {
		8,
		4,
		4,
		5,
		4,
		5,
		6,
		5,
		4,
		5,
		6,
		6,
		5,
		5,
		5,
		5,
		5,
		5,
		4,
		5,
	};
	glMultiDrawElements(GL_POLYGON, count, GL_UNSIGNED_INT, indices_total, 20);
}

void glMultiDrawElements_學(void) {
	setupInterleave_學();
	GLuint indices1[56][50];

	fill_in_multi_indices(indices1[0], 0, 5);
	fill_in_multi_indices(indices1[1], 5, 8);
	fill_in_multi_indices(indices1[2], 13, 5);
	fill_in_multi_indices(indices1[3], 18, 7);
	fill_in_multi_indices(indices1[4], 25, 8);
	fill_in_multi_indices(indices1[5], 33, 4);
	fill_in_multi_indices(indices1[6], 37, 3);
	fill_in_multi_indices(indices1[7], 40, 3);
	fill_in_multi_indices(indices1[8], 43, 4);
	fill_in_multi_indices(indices1[9], 47, 8);
	fill_in_multi_indices(indices1[10], 55, 3);
	fill_in_multi_indices(indices1[11], 58, 3);
	fill_in_multi_indices(indices1[12], 61, 6);
	fill_in_multi_indices(indices1[13], 67, 4);
	fill_in_multi_indices(indices1[14], 71, 4);
	fill_in_multi_indices(indices1[15], 75, 7);
	fill_in_multi_indices(indices1[16], 82, 4);
	fill_in_multi_indices(indices1[17], 86, 4);
	fill_in_multi_indices(indices1[18], 90, 4);
	fill_in_multi_indices(indices1[19], 94, 6);
	fill_in_multi_indices(indices1[20], 100, 7);
	fill_in_multi_indices(indices1[21], 107, 4);
	fill_in_multi_indices(indices1[22], 111, 6);
	fill_in_multi_indices(indices1[23], 117, 4);
	fill_in_multi_indices(indices1[24], 121, 5);
	fill_in_multi_indices(indices1[25], 126, 4);
	fill_in_multi_indices(indices1[26], 130, 5);
	fill_in_multi_indices(indices1[27], 135, 7);
	fill_in_multi_indices(indices1[28], 142, 4);
	fill_in_multi_indices(indices1[29], 146, 8);
	fill_in_multi_indices(indices1[30], 154, 3);
	fill_in_multi_indices(indices1[31], 157, 5);
	fill_in_multi_indices(indices1[32], 162, 8);
	fill_in_multi_indices(indices1[33], 170, 3);
	fill_in_multi_indices(indices1[34], 173, 4);
	fill_in_multi_indices(indices1[35], 177, 4);
	fill_in_multi_indices(indices1[36], 181, 3);
	fill_in_multi_indices(indices1[37], 184, 3);
	fill_in_multi_indices(indices1[38], 187, 5);
	fill_in_multi_indices(indices1[39], 192, 5);
	fill_in_multi_indices(indices1[40], 197, 6);
	fill_in_multi_indices(indices1[41], 203, 10);
	fill_in_multi_indices(indices1[42], 213, 4);
	fill_in_multi_indices(indices1[43], 217, 5);
	fill_in_multi_indices(indices1[44], 222, 4);
	fill_in_multi_indices(indices1[45], 226, 3);
	fill_in_multi_indices(indices1[46], 229, 5);
	fill_in_multi_indices(indices1[47], 234, 4);
	fill_in_multi_indices(indices1[48], 238, 4);
	fill_in_multi_indices(indices1[49], 242, 4);
	fill_in_multi_indices(indices1[50], 246, 4);
	fill_in_multi_indices(indices1[51], 250, 5);
	fill_in_multi_indices(indices1[52], 255, 8);
	fill_in_multi_indices(indices1[53], 263, 3);
	fill_in_multi_indices(indices1[54], 266, 3);
	fill_in_multi_indices(indices1[55], 269, 4);

	GLvoid* indices_total[56];
	for (int i = 0; i < 56; i++) {
		indices_total[i] = indices1[i];
	}

	GLint count[] = {
		5,
		8,
		5,
		7,
		8,
		4,
		3,
		3,
		4,
		8,
		3,
		3,
		6,
		4,
		4,
		7,
		4,
		4,
		4,
		6,
		7,
		4,
		6,
		4,
		5,
		4,
		5,
		7,
		4,
		8,
		3,
		5,
		8,
		3,
		4,
		4,
		3,
		3,
		5,
		5,
		6,
		10,
		4,
		5,
		4,
		3,
		5,
		4,
		4,
		4,
		4,
		5,
		8,
		3,
		3,
		4,
	};
	glMultiDrawElements(GL_POLYGON, count, GL_UNSIGNED_INT, indices_total, 56);
}

void glMultiDrawElements_logo(void) {
	setupInterleave_logo();
	GLuint indices1[26][50];
	GLuint indices2[5][50];

	fill_in_multi_indices(indices1[0], 0, 3);
	fill_in_multi_indices(indices1[1], 3, 4);
	fill_in_multi_indices(indices1[2], 7, 4);
	fill_in_multi_indices(indices1[3], 11, 4);
	fill_in_multi_indices(indices1[4], 15, 4);
	fill_in_multi_indices(indices1[5], 19, 4);
	fill_in_multi_indices(indices1[6], 23, 4);
	fill_in_multi_indices(indices1[7], 27, 14);
	fill_in_multi_indices(indices1[8], 41, 4);
	fill_in_multi_indices(indices1[9], 45, 4);
	fill_in_multi_indices(indices1[10], 49, 4);
	fill_in_multi_indices(indices1[11], 53, 4);
	fill_in_multi_indices(indices1[12], 57, 4);
	fill_in_multi_indices(indices1[13], 61, 4);
	fill_in_multi_indices(indices1[14], 65, 4);
	fill_in_multi_indices(indices1[15], 69, 4);
	fill_in_multi_indices(indices1[16], 73, 4);
	fill_in_multi_indices(indices1[17], 77, 4);
	fill_in_multi_indices(indices1[18], 81, 4);
	fill_in_multi_indices(indices1[19], 85, 4);
	fill_in_multi_indices(indices1[20], 89, 4);
	fill_in_multi_indices(indices1[21], 93, 4);
	fill_in_multi_indices(indices1[22], 97, 4);
	fill_in_multi_indices(indices1[23], 101, 4);
	fill_in_multi_indices(indices1[24], 105, 3);
	fill_in_multi_indices(indices1[25], 108, 4);

	GLvoid* indices_total1[26];
	for (int i = 0; i < 26; i++) {
		indices_total1[i] = indices1[i];
	}
	GLint count[] = {
		3,
		4,
		4,
		4,
		4,
		4,
		4,
		14,
		4,
		4,
		4,
		4,
		4,
		4,
		4,
		4,
		4,
		4,
		4,
		4,
		4,
		4,
		4,
		4,
		3,
		4,
	}; 
	glMultiDrawElements(GL_POLYGON, count, GL_UNSIGNED_INT, indices_total1, 26);

	glColor3f(1.0f, 0.0f, 0.0f);
	fill_in_multi_indices(indices2[0], 112, 20);
	fill_in_multi_indices(indices2[1], 132, 6);
	fill_in_multi_indices(indices2[2], 138, 4);
	fill_in_multi_indices(indices2[3], 142, 4);
	fill_in_multi_indices(indices2[4], 146, 6);

	GLvoid* indices_total2[5];
	for (int i = 0; i < 5; i++) {
		indices_total2[i] = indices2[i];
	}
	GLint count2[] = {
			20,
			6,
			4,
			4,
			6,
		};
	glMultiDrawElements(GL_POLYGON, count2, GL_UNSIGNED_INT, indices_total2, 5);

	glColor3f(0.29803f, 0.53725f, 0.63922f);
}

void glMultiDrawElements_National(void) {
	setupInterleave_National();
	GLuint indices1[15][50];

	fill_in_multi_indices(indices1[0], 0, 5);
	fill_in_multi_indices(indices1[1], 5, 4);
	fill_in_multi_indices(indices1[2], 9, 5);
	fill_in_multi_indices(indices1[3], 14, 17);
	fill_in_multi_indices(indices1[4], 31, 19);
	fill_in_multi_indices(indices1[5], 50, 8);
	fill_in_multi_indices(indices1[6], 58, 4);
	fill_in_multi_indices(indices1[7], 62, 4);
	fill_in_multi_indices(indices1[8], 66, 4);
	fill_in_multi_indices(indices1[9], 70, 31);
	fill_in_multi_indices(indices1[10], 101, 4);
	fill_in_multi_indices(indices1[11], 105, 11);
	fill_in_multi_indices(indices1[12], 116, 17);
	fill_in_multi_indices(indices1[13], 133, 19);
	fill_in_multi_indices(indices1[14], 152, 4);

	GLvoid* indices_total[15];
	for (int i = 0; i < 15; i++) {
		indices_total[i] = indices1[i];
	}

	GLint count[] = {
		5,
		4,
		5,
		17,
		19,
		8,
		4,
		4,
		4,
		31,
		4,
		11,
		17,
		19,
		4,
	};

	glMultiDrawElements(GL_TRIANGLE_STRIP, count, GL_UNSIGNED_INT, indices_total, 15);
}

void glMultiDrawElements_Chung(void) {
	setupInterleave_Chung();
	GLuint indices1[9][50];

	fill_in_multi_indices(indices1[0], 0, 31);
	fill_in_multi_indices(indices1[1], 31, 4);
	fill_in_multi_indices(indices1[2], 35, 11);
	fill_in_multi_indices(indices1[3], 46, 15);
	fill_in_multi_indices(indices1[4], 61, 4);
	fill_in_multi_indices(indices1[5], 65, 4);
	fill_in_multi_indices(indices1[6], 69, 11);
	fill_in_multi_indices(indices1[7], 80, 25);
	fill_in_multi_indices(indices1[8], 105, 16);

	GLvoid* indices_total[9];
	for (int i = 0; i < 9; i++) {
		indices_total[i] = indices1[i];
	}

	GLint count[] = {
		31,
		4,
		11,
		15,
		4,
		4,
		11,
		25,
		16,
	};
	glMultiDrawElements(GL_TRIANGLE_STRIP, count, GL_UNSIGNED_INT, indices_total, 9);
}

void glMultiDrawElements_Hsing(void) {
	setupInterleave_Hsing();
	GLuint indices1[10][50];

	fill_in_multi_indices(indices1[0], 0, 4);
	fill_in_multi_indices(indices1[1], 4, 4);
	fill_in_multi_indices(indices1[2], 8, 4);
	fill_in_multi_indices(indices1[3], 12, 36);
	fill_in_multi_indices(indices1[4], 48, 4);
	fill_in_multi_indices(indices1[5], 52, 4);
	fill_in_multi_indices(indices1[6], 56, 4);
	fill_in_multi_indices(indices1[7], 60, 11);
	fill_in_multi_indices(indices1[8], 71, 25);
	fill_in_multi_indices(indices1[9], 96, 16);

	GLvoid* indices_total[10];
	for (int i = 0; i < 10; i++) {
		indices_total[i] = indices1[i];
	}

	GLint count[] = {
		4,
		4,
		4,
		36,
		4,
		4,
		4,
		11,
		25,
		16,
	};
	glMultiDrawElements(GL_TRIANGLE_STRIP, count, GL_UNSIGNED_INT, indices_total, 10);
}

void glMultiDrawElements_University(void) {
	setupInterleave_University();
	GLuint indices1[16][50];

	fill_in_multi_indices(indices1[0], 0, 18);
	fill_in_multi_indices(indices1[1], 18, 4);
	fill_in_multi_indices(indices1[2], 22, 11);
	fill_in_multi_indices(indices1[3], 33, 4);
	fill_in_multi_indices(indices1[4], 37, 4);
	fill_in_multi_indices(indices1[5], 41, 7);
	fill_in_multi_indices(indices1[6], 48, 36);
	fill_in_multi_indices(indices1[7], 84, 4);
	fill_in_multi_indices(indices1[8], 88, 8);
	fill_in_multi_indices(indices1[9], 96, 36);
	fill_in_multi_indices(indices1[10], 132, 4);
	fill_in_multi_indices(indices1[11], 136, 4);
	fill_in_multi_indices(indices1[12], 140, 8);
	fill_in_multi_indices(indices1[13], 148, 4);
	fill_in_multi_indices(indices1[14], 152, 4);
	fill_in_multi_indices(indices1[15], 156, 13);

	GLvoid* indices_total[16];
	for (int i = 0; i < 16; i++) {
		indices_total[i] = indices1[i];
	}

	GLint count[] = {
		18,
		4,
		11,
		4,
		4,
		7,
		36,
		4,
		8,
		36,
		4,
		4,
		8,
		4,
		4,
		13,
	};
	glMultiDrawElements(GL_TRIANGLE_STRIP, count, GL_UNSIGNED_INT, indices_total, 16);

}


void display(void)	
{
	int temp[3] = { 10, 8, 4 };
	
	glClear(GL_COLOR_BUFFER_BIT);
	glColor3f(0.29803f, 0.53725f, 0.63922f);
	
	switch (display_type) {
		case DRAW_ARRAY: //使用glDrawArrays
			glDrawArrays_國();
			glDrawArrays_立();
			glDrawArrays_中();
			glDrawArrays_興();
			glDrawArrays_大();
			glDrawArrays_學();
			glDrawArrays_logo();
			glDrawArrays_National();
			glDrawArrays_Chung();
			glDrawArrays_Hsing();
			glDrawArrays_University();
			break;

		case DRAW_ELEMENT: //使用glDrawElements
			glDrawElements_國();
			glDrawElements_立();
			glDrawElements_中();
			glDrawElements_興();
			glDrawElements_大();
			glDrawElements_學();
			glDrawElements_logo();
			glDrawElements_National();
			glDrawElements_Chung();
			glDrawElements_Hsing();
			glDrawElements_University();
			break;

		case DRAW_MULTI_ARRAY: //使用glMultiDrawArrays
			glMultiDrawArrays_國();
			glMultiDrawArrays_立();
			glMultiDrawArrays_中();
			glMultiDrawArrays_興();
			glMultiDrawArrays_大();
			glMultiDrawArrays_學();
			glMultiDrawArrays_logo();
			glMultiDrawArrays_National();
			glMultiDrawArrays_Chung();
			glMultiDrawArrays_Hsing();
			glMultiDrawArrays_University();
			break;

		case DRAW_MULTI_ELEMENT: //使用glMultiDrawElements
			glMultiDrawElements_國();
			glMultiDrawElements_立();
			glMultiDrawElements_中();
			glMultiDrawElements_興();
			glMultiDrawElements_大();
			glMultiDrawElements_學();
			glMultiDrawElements_logo();
			glMultiDrawElements_National();
			glMultiDrawElements_Chung();
			glMultiDrawElements_Hsing();
			glMultiDrawElements_University();
			break;

		default:
			break;
	}
	glutSwapBuffers();
}

void reshape(int width, int height)
{
	glViewport(0, 0, width, height); 
	glMatrixMode(GL_PROJECTION);
	glLoadIdentity();

	/*
	if (width <= height)
		glOrtho(-1.5, 1.5, -1.5 * (GLfloat)height / (GLfloat)width, 1.5 * (GLfloat)height / (GLfloat)width, -10.0, 10.0);
	else
		glOrtho(-1.5 * (GLfloat)width / (GLfloat)height, 1.5 * (GLfloat)width / (GLfloat)height, -1.5, 1.5, -10.0, 10.0);
	*/
	glOrtho(-5.1, 5.1, -2.8, 2.8, -3.0, 3.0);
}

void mouse(int button, int state, int x, int y) {
	switch (button) {
		case GLUT_LEFT_BUTTON:
			if (state == GLUT_DOWN) {
				glRotatef(30, 0.0, 0.0, 1.0);
			}
			break;

		case GLUT_MIDDLE_BUTTON:
			if (state == GLUT_DOWN) {
				glRotatef(30, 0.0, 1.0, 0.0);
			}
			break;

		case GLUT_RIGHT_BUTTON:
			if (state == GLUT_DOWN) {
				glRotatef(30, 1.0, 0.0, 0.0);
			}
			break;

		default:
			break;
	}
	glutPostRedisplay();
}

void keyboard(unsigned char key, int x, int y)
{
	switch (key) {
		case '1':
			display_type = DRAW_ARRAY;		
			break;

		case '2':
			display_type = DRAW_ELEMENT;		
			break;

		case '3':
			display_type = DRAW_MULTI_ARRAY;
			break;

		case '4':
			display_type = DRAW_MULTI_ELEMENT;
			break;

		case 27:
			exit(0);
			break;

		default:
			break;
	}
	glutPostRedisplay();
}

void init(void)
{
	glClearColor(1.0f, 1.0f, 1.0f, 0.0f);
	glShadeModel(GL_SMOOTH);
}

int main(int argc, char* argv[]) {
	glutInit(&argc, argv);
	glutInitDisplayMode(GLUT_RGB | GLUT_DOUBLE);
	glutInitWindowPosition(0, 0);
	glutInitWindowSize(1200, 650);
	glutCreateWindow("國立中興大學");
	init();
	
	glutDisplayFunc(display);
	glutReshapeFunc(reshape);
	glutMouseFunc(mouse);
	glutKeyboardFunc(keyboard);
	glutMainLoop();

	return 0;
}
